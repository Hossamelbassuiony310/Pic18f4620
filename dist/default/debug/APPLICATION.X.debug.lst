

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri May 17 20:13:25 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 23/03/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4620 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     
    73 ;; Function _Int0_ISR is unused but had its address taken
    74   000000                     
    75                           	psect	idataCOMRAM
    76   00181A                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _port_registers
    80   00181A  80                 	db	128
    81   00181B  0F                 	db	15
    82   00181C  81                 	db	129
    83   00181D  0F                 	db	15
    84   00181E  82                 	db	130
    85   00181F  0F                 	db	15
    86   001820  83                 	db	131
    87   001821  0F                 	db	15
    88   001822  84                 	db	132
    89   001823  0F                 	db	15
    90                           
    91                           ;initializer for _lat_registers
    92   001824  89                 	db	137
    93   001825  0F                 	db	15
    94   001826  8A                 	db	138
    95   001827  0F                 	db	15
    96   001828  8B                 	db	139
    97   001829  0F                 	db	15
    98   00182A  8C                 	db	140
    99   00182B  0F                 	db	15
   100   00182C  8D                 	db	141
   101   00182D  0F                 	db	15
   102                           
   103                           ;initializer for _tris_registers
   104   00182E  92                 	db	146
   105   00182F  0F                 	db	15
   106   001830  93                 	db	147
   107   001831  0F                 	db	15
   108   001832  94                 	db	148
   109   001833  0F                 	db	15
   110   001834  95                 	db	149
   111   001835  0F                 	db	15
   112   001836  96                 	db	150
   113   001837  0F                 	db	15
   114                           
   115                           ;initializer for _RB7_Flag
   116   001838  01                 	db	1
   117                           
   118                           ;initializer for _RB6_Flag
   119   001839  01                 	db	1
   120                           
   121                           ;initializer for _RB5_Flag
   122   00183A  01                 	db	1
   123                           
   124                           ;initializer for _RB4_Flag
   125   00183B  01                 	db	1
   126                           
   127                           ;initializer for _led3
   128   00183C  22                 	db	34
   129                           
   130                           ;initializer for _led2
   131   00183D  12                 	db	18
   132                           
   133                           ;initializer for _int0_obj
   134   00183E  00                 	db	0
   135   00183F  00                 	db	0
   136   001840  41                 	db	65
   137   001841  01                 	db	1
   138   001842  00                 	db	0
   139   001843  01                 	db	1
   140                           
   141                           ;initializer for _led1
   142   001844  02                 	db	2
   143                           
   144                           	psect	smallconst
   145   001000                     __psmallconst:
   146                           	callstack 0
   147   001000  00                 	db	0
   148   001001                     _btn_value:
   149                           	callstack 0
   150   001001  37                 	db	55
   151   001002  38                 	db	56
   152   001003  39                 	db	57
   153   001004  2F                 	db	47
   154   001005  34                 	db	52
   155   001006  35                 	db	53
   156   001007  36                 	db	54
   157   001008  2A                 	db	42
   158   001009  31                 	db	49
   159   00100A  32                 	db	50
   160   00100B  33                 	db	51
   161   00100C  2D                 	db	45
   162   00100D  23                 	db	35
   163   00100E  30                 	db	48
   164   00100F  3D                 	db	61
   165   001010  2B                 	db	43
   166   001011                     __end_of_btn_value:
   167                           	callstack 0
   168   000000                     _SSPBUF	set	4041
   169   000000                     _SSPSTATbits	set	4039
   170   000000                     _SSPADD	set	4040
   171   000000                     _SSPCON2bits	set	4037
   172   000000                     _SSPCON1bits	set	4038
   173   000000                     _SPBRGH	set	4016
   174   000000                     _SPBRG	set	4015
   175   000000                     _TXREG	set	4013
   176   000000                     _TXSTAbits	set	4012
   177   000000                     _RCREG	set	4014
   178   000000                     _RCSTAbits	set	4011
   179   000000                     _TMR3L	set	4018
   180   000000                     _TMR3H	set	4019
   181   000000                     _TMR2	set	4044
   182   000000                     _T2CONbits	set	4042
   183   000000                     _TMR1L	set	4046
   184   000000                     _TMR1H	set	4047
   185   000000                     _T1CONbits	set	4045
   186   000000                     _TMR0L	set	4054
   187   000000                     _TMR0H	set	4055
   188   000000                     _RCONbits	set	4048
   189   000000                     _EECON2	set	4007
   190   000000                     _ADCON1bits	set	4033
   191   000000                     _ADRESL	set	4035
   192   000000                     _ADRESH	set	4036
   193   000000                     _INTCONbits	set	4082
   194   000000                     _TRISD	set	3989
   195   000000                     _TRISC	set	3988
   196   000000                     _PR2	set	4043
   197   000000                     _TRISB	set	3987
   198   000000                     _TRISE	set	3990
   199   000000                     _TRISCbits	set	3988
   200   000000                     _PIE1bits	set	3997
   201   000000                     _ADCON2bits	set	4032
   202   000000                     _ADCON0bits	set	4034
   203   000000                     _PORTE	set	3972
   204   000000                     _PORTD	set	3971
   205   000000                     _PORTC	set	3970
   206   000000                     _PORTB	set	3969
   207   000000                     _PORTA	set	3968
   208   000000                     _LATA	set	3977
   209   000000                     _TRISA	set	3986
   210   000000                     _EECON1bits	set	4006
   211   000000                     _EEDATA	set	4008
   212   000000                     _EEADR	set	4009
   213   000000                     _EEADRH	set	4010
   214   000000                     _IPR2bits	set	4002
   215   000000                     _PIR2bits	set	4001
   216   000000                     _T3CONbits	set	4017
   217   000000                     _PIE2bits	set	4000
   218   000000                     _CCP2CONbits	set	4026
   219   000000                     _CCP1CONbits	set	4029
   220   000000                     _IPR1bits	set	3999
   221   000000                     _PIR1bits	set	3998
   222   000000                     _CCPR1L	set	4030
   223   000000                     _CCPR2L	set	4027
   224   000000                     _LATE	set	3981
   225   000000                     _LATD	set	3980
   226   000000                     _LATC	set	3979
   227   000000                     _LATB	set	3978
   228   000000                     _T0CONbits	set	4053
   229   000000                     _INTCON3bits	set	4080
   230   000000                     _INTCON2bits	set	4081
   231   000000                     _BAUDCONbits	set	4024
   232   001011  00                 	db	0	; dummy byte at the end
   233   000000                     
   234                           ; #config settings
   235                           
   236                           	psect	cinit
   237   0017E4                     __pcinit:
   238                           	callstack 0
   239   0017E4                     start_initialization:
   240                           	callstack 0
   241   0017E4                     __initialization:
   242                           	callstack 0
   243                           
   244                           ; Initialize objects allocated to COMRAM (43 bytes)
   245                           ; load TBLPTR registers with __pidataCOMRAM
   246   0017E4  0E1A               	movlw	low __pidataCOMRAM
   247   0017E6  6EF6               	movwf	tblptrl,c
   248   0017E8  0E18               	movlw	high __pidataCOMRAM
   249   0017EA  6EF7               	movwf	tblptrh,c
   250   0017EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   251   0017EE  6EF8               	movwf	tblptru,c
   252   0017F0  EE00  F043         	lfsr	0,__pdataCOMRAM
   253   0017F4  EE10 F02B          	lfsr	1,43
   254   0017F8                     copy_data0:
   255   0017F8  0009               	tblrd		*+
   256   0017FA  CFF5 FFEE          	movff	tablat,postinc0
   257   0017FE  50E5               	movf	postdec1,w,c
   258   001800  50E1               	movf	fsr1l,w,c
   259   001802  E1FA               	bnz	copy_data0
   260                           
   261                           ; Clear objects allocated to COMRAM (66 bytes)
   262   001804  EE00  F001         	lfsr	0,__pbssCOMRAM
   263   001808  0E42               	movlw	66
   264   00180A                     clear_0:
   265   00180A  6AEE               	clrf	postinc0,c
   266   00180C  06E8               	decf	wreg,f,c
   267   00180E  E1FD               	bnz	clear_0
   268   001810                     end_of_initialization:
   269                           	callstack 0
   270   001810                     __end_of__initialization:
   271                           	callstack 0
   272   001810  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273   001812  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274   001814  0100               	movlb	0
   275   001816  EF89  F00C         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	bssCOMRAM
   278   000001                     __pbssCOMRAM:
   279                           	callstack 0
   280   000001                     _I2C_Report_Receive_Overflow_InterruptHandle:
   281                           	callstack 0
   282   000001                     	ds	2
   283   000003                     _I2C_DefaultInterruptHandle:
   284                           	callstack 0
   285   000003                     	ds	2
   286   000005                     _I2C_Report_Write_Collision_InterruptHandler:
   287                           	callstack 0
   288   000005                     	ds	2
   289   000007                     _EUSART_OverrunErrorHandler:
   290                           	callstack 0
   291   000007                     	ds	2
   292   000009                     _EUSART_FramingErrorHandler:
   293                           	callstack 0
   294   000009                     	ds	2
   295   00000B                     _EUSART_RxInterruptHandler:
   296                           	callstack 0
   297   00000B                     	ds	2
   298   00000D                     _EUSART_TxInterruptHandler:
   299                           	callstack 0
   300   00000D                     	ds	2
   301   00000F                     _timer3_preload:
   302                           	callstack 0
   303   00000F                     	ds	2
   304   000011                     _TMR3_InterruptHandler:
   305                           	callstack 0
   306   000011                     	ds	2
   307   000013                     _TMR2_InterruptHandler:
   308                           	callstack 0
   309   000013                     	ds	2
   310   000015                     _timer1_preload:
   311                           	callstack 0
   312   000015                     	ds	2
   313   000017                     _TMR1_InterruptHandler:
   314                           	callstack 0
   315   000017                     	ds	2
   316   000019                     _timer0_preload:
   317                           	callstack 0
   318   000019                     	ds	2
   319   00001B                     _TMR0_InterruptHandler:
   320                           	callstack 0
   321   00001B                     	ds	2
   322   00001D                     _RB7_InterruptHandler_LOW:
   323                           	callstack 0
   324   00001D                     	ds	2
   325   00001F                     _RB7_InterruptHandler_HIGH:
   326                           	callstack 0
   327   00001F                     	ds	2
   328   000021                     _RB6_InterruptHandler_LOW:
   329                           	callstack 0
   330   000021                     	ds	2
   331   000023                     _RB6_InterruptHandler_HIGH:
   332                           	callstack 0
   333   000023                     	ds	2
   334   000025                     _RB5_InterruptHandler_LOW:
   335                           	callstack 0
   336   000025                     	ds	2
   337   000027                     _RB5_InterruptHandler_HIGH:
   338                           	callstack 0
   339   000027                     	ds	2
   340   000029                     _RB4_InterruptHandler_LOW:
   341                           	callstack 0
   342   000029                     	ds	2
   343   00002B                     _RB4_InterruptHandler_HIGH:
   344                           	callstack 0
   345   00002B                     	ds	2
   346   00002D                     _INT2_InterruptHandler:
   347                           	callstack 0
   348   00002D                     	ds	2
   349   00002F                     _INT1_InterruptHandler:
   350                           	callstack 0
   351   00002F                     	ds	2
   352   000031                     _INT0_InterruptHandler:
   353                           	callstack 0
   354   000031                     	ds	2
   355   000033                     _CCP2_InterruptHandler:
   356                           	callstack 0
   357   000033                     	ds	2
   358   000035                     _CCP1_InterruptHandler:
   359                           	callstack 0
   360   000035                     	ds	2
   361   000037                     _ADC_InterruptHandler:
   362                           	callstack 0
   363   000037                     	ds	2
   364   000039                     _timer2_preload:
   365                           	callstack 0
   366   000039                     	ds	1
   367   00003A                     relay_turn_off@F3062:
   368                           	callstack 0
   369   00003A                     	ds	1
   370   00003B                     relay_turn_on@F3057:
   371                           	callstack 0
   372   00003B                     	ds	1
   373   00003C                     relay_initialize@F3052:
   374                           	callstack 0
   375   00003C                     	ds	1
   376   00003D                     led_turn_toggle@F3073:
   377                           	callstack 0
   378   00003D                     	ds	1
   379   00003E                     led_turn_off@F3068:
   380                           	callstack 0
   381   00003E                     	ds	1
   382   00003F                     led_turn_on@F3063:
   383                           	callstack 0
   384   00003F                     	ds	1
   385   000040                     led_initialize@F3058:
   386                           	callstack 0
   387   000040                     	ds	1
   388   000041                     	ds	1
   389   000042                     	ds	1
   390                           
   391                           	psect	dataCOMRAM
   392   000043                     __pdataCOMRAM:
   393                           	callstack 0
   394   000043                     _port_registers:
   395                           	callstack 0
   396   000043                     	ds	10
   397   00004D                     _lat_registers:
   398                           	callstack 0
   399   00004D                     	ds	10
   400   000057                     _tris_registers:
   401                           	callstack 0
   402   000057                     	ds	10
   403   000061                     _RB7_Flag:
   404                           	callstack 0
   405   000061                     	ds	1
   406   000062                     _RB6_Flag:
   407                           	callstack 0
   408   000062                     	ds	1
   409   000063                     _RB5_Flag:
   410                           	callstack 0
   411   000063                     	ds	1
   412   000064                     _RB4_Flag:
   413                           	callstack 0
   414   000064                     	ds	1
   415   000065                     _led3:
   416                           	callstack 0
   417   000065                     	ds	1
   418   000066                     _led2:
   419                           	callstack 0
   420   000066                     	ds	1
   421   000067                     _int0_obj:
   422                           	callstack 0
   423   000067                     	ds	6
   424   00006D                     _led1:
   425                           	callstack 0
   426   00006D                     	ds	1
   427                           
   428                           	psect	cstackBANK0
   429   000080                     __pcstackBANK0:
   430                           	callstack 0
   431   000080                     led_initialize@ret:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x0
   435   000080                     	ds	1
   436   000081                     led_initialize@pin_obj:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1
   440   000081                     	ds	1
   441                           
   442                           	psect	cstackCOMRAM
   443   00006E                     __pcstackCOMRAM:
   444                           	callstack 0
   445   00006E                     ??_InterruptMangerLow:
   446   00006E                     
   447                           ; 2 bytes @ 0x0
   448   00006E                     	ds	2
   449   000070                     gpio_pin_direction_intialize@_pin_config:
   450                           	callstack 0
   451   000070                     gpio_pin_write_logic@_pin_config:
   452                           	callstack 0
   453   000070                     Interrupt_INTx_Enable@int_obj:
   454                           	callstack 0
   455   000070                     Interrupt_INTx_Disable@int_obj:
   456                           	callstack 0
   457   000070                     Interrupt_INTx_Priority_Init@int_obj:
   458                           	callstack 0
   459   000070                     Interrupt_INTx_Edge_Init@int_obj:
   460                           	callstack 0
   461   000070                     Interrupt_INTx_Clear_Flag@int_obj:
   462                           	callstack 0
   463   000070                     INT0_SetInterruptHandler@InterruptHandler:
   464                           	callstack 0
   465   000070                     INT1_SetInterruptHandler@InterruptHandler:
   466                           	callstack 0
   467   000070                     INT2_SetInterruptHandler@InterruptHandler:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x2
   471   000070                     	ds	1
   472   000071                     ??_gpio_pin_direction_intialize:
   473   000071                     ??_Interrupt_INTx_Disable:
   474   000071                     ??_Interrupt_INTx_Clear_Flag:
   475   000071                     ??_Interrupt_INTx_Edge_Init:
   476   000071                     ??_Interrupt_INTx_Priority_Init:
   477   000071                     ??_Interrupt_INTx_Enable:
   478   000071                     gpio_pin_write_logic@logic:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x3
   482   000071                     	ds	1
   483   000072                     ??_gpio_pin_write_logic:
   484   000072                     INT0_SetInterruptHandler@ret:
   485                           	callstack 0
   486   000072                     INT1_SetInterruptHandler@ret:
   487                           	callstack 0
   488   000072                     INT2_SetInterruptHandler@ret:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x4
   492   000072                     	ds	1
   493   000073                     Interrupt_INTx_Enable@ret:
   494                           	callstack 0
   495   000073                     Interrupt_INTx_Disable@ret:
   496                           	callstack 0
   497   000073                     Interrupt_INTx_Priority_Init@ret:
   498                           	callstack 0
   499   000073                     Interrupt_INTx_Edge_Init@ret:
   500                           	callstack 0
   501   000073                     Interrupt_INTx_Clear_Flag@ret:
   502                           	callstack 0
   503   000073                     Interrupt_INTx_SetInterruptHandler@int_obj:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x5
   507   000073                     	ds	1
   508   000074                     ??_Interrupt_INTx_SetInterruptHandler:
   509                           
   510                           ; 1 bytes @ 0x6
   511   000074                     	ds	2
   512   000076                     gpio_pin_direction_intialize@ret:
   513                           	callstack 0
   514   000076                     Interrupt_INTx_SetInterruptHandler@ret:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x8
   518   000076                     	ds	1
   519   000077                     gpio_pin_write_logic@ret:
   520                           	callstack 0
   521   000077                     Interrupt_INTx_Pin_Init@int_obj:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x9
   525   000077                     	ds	1
   526   000078                     gpio_pin_intialize@_pin_config:
   527                           	callstack 0
   528   000078                     Interrupt_INTx_Pin_Init@ret:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0xA
   532   000078                     	ds	1
   533   000079                     ??_gpio_pin_intialize:
   534   000079                     Interrupt_INTx_Init@int_obj:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0xB
   538   000079                     	ds	1
   539   00007A                     gpio_pin_intialize@ret:
   540                           	callstack 0
   541   00007A                     Interrupt_INTx_Init@ret:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0xC
   545   00007A                     	ds	1
   546   00007B                     led_initialize@led:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0xD
   550   00007B                     	ds	1
   551   00007C                     ??_led_initialize:
   552                           
   553                           ; 1 bytes @ 0xE
   554   00007C                     	ds	1
   555   00007D                     
   556                           ; 1 bytes @ 0xF
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 28 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  ret             1    0        unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  2  1492[None  ] int 
   569 ;; Registers used:
   570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels required when called: 5
   582 ;; This function calls:
   583 ;;		_Interrupt_INTx_Init
   584 ;;		_application_intialize
   585 ;;		_led_initialize
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592   001912                     __ptext0:
   593                           	callstack 0
   594   001912                     _main:
   595                           	callstack 26
   596   001912                     
   597                           ;main.c: 31:     application_intialize();
   598   001912  EC97  F00C         	call	_application_intialize	;wreg free
   599   001916  0E67               	movlw	low _int0_obj
   600   001918  6E79               	movwf	Interrupt_INTx_Init@int_obj^0,c
   601   00191A  EC92  F00B         	call	_Interrupt_INTx_Init	;wreg free
   602   00191E  0E6D               	movlw	low _led1
   603   001920  6E7B               	movwf	led_initialize@led^0,c
   604   001922  ECE5  F00A         	call	_led_initialize	;wreg free
   605   001926                     l1493:
   606   001926  EF93  F00C         	goto	l1493
   607   00192A  EF1F  F000         	goto	start
   608   00192E                     __end_of_main:
   609                           	callstack 0
   610                           
   611 ;; *************** function _led_initialize *****************
   612 ;; Defined at:
   613 ;;		line 16 in file "ECU_Layer/LED/ecu_led.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  led             1   13[COMRAM] PTR const struct .
   616 ;;		 -> led1(1), 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  pin_obj         1    1[BANK0 ] struct .
   619 ;;  ret             1    0[BANK0 ] unsigned char 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      unsigned char 
   622 ;; Registers used:
   623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        4 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_gpio_pin_intialize
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text1
   644   0015CA                     __ptext1:
   645                           	callstack 0
   646   0015CA                     _led_initialize:
   647                           	callstack 26
   648   0015CA                     
   649                           ;ECU_Layer/LED/ecu_led.c: 17:     Std_ReturnType ret = (Std_ReturnType) 0x01;
   650   0015CA  0E01               	movlw	1
   651   0015CC  0100               	movlb	0	; () banked
   652   0015CE  6F80               	movwf	led_initialize@ret& (0+255),b
   653                           
   654                           ;ECU_Layer/LED/ecu_led.c: 18:     if(((void*)0) == led){
   655   0015D0  507B               	movf	led_initialize@led^0,w,c
   656   0015D2  A4D8               	btfss	status,2,c
   657   0015D4  EFEE  F00A         	goto	u4351
   658   0015D8  EFF0  F00A         	goto	u4350
   659   0015DC                     u4351:
   660   0015DC  EFF4  F00A         	goto	l244
   661   0015E0                     u4350:
   662   0015E0                     
   663                           ; BSR set to: 0
   664                           ;ECU_Layer/LED/ecu_led.c: 19:         ret = (Std_ReturnType) 0x00;
   665   0015E0  0E00               	movlw	0
   666   0015E2  6F80               	movwf	led_initialize@ret& (0+255),b
   667                           
   668                           ;ECU_Layer/LED/ecu_led.c: 20:     }
   669   0015E4  EF1D  F00B         	goto	l6212
   670   0015E8                     l244:
   671                           
   672                           ; BSR set to: 0
   673                           ;ECU_Layer/LED/ecu_led.c: 22:         pin_config_t pin_obj = { .port = led->port_name, .
      +                          pin = led->pin,
   674   0015E8  C040  F081         	movff	led_initialize@F3058,led_initialize@pin_obj
   675   0015EC                     
   676                           ; BSR set to: 0
   677   0015EC  507B               	movf	led_initialize@led^0,w,c
   678   0015EE  6ED9               	movwf	fsr2l,c
   679   0015F0  6ADA               	clrf	fsr2h,c
   680   0015F2  50DF               	movf	223,w,c
   681   0015F4  0B0F               	andlw	15
   682   0015F6  6E7C               	movwf	??_led_initialize^0,c
   683   0015F8  5181               	movf	led_initialize@pin_obj& (0+255),w,b
   684   0015FA  187C               	xorwf	??_led_initialize^0,w,c
   685   0015FC  0BF8               	andlw	-8
   686   0015FE  187C               	xorwf	??_led_initialize^0,w,c
   687   001600  6F81               	movwf	led_initialize@pin_obj& (0+255),b
   688   001602  507B               	movf	led_initialize@led^0,w,c
   689   001604  6ED9               	movwf	fsr2l,c
   690   001606  6ADA               	clrf	fsr2h,c
   691   001608  38DF               	swapf	223,w,c
   692   00160A  0B07               	andlw	7
   693   00160C  6E7C               	movwf	??_led_initialize^0,c
   694   00160E  467C               	rlncf	??_led_initialize^0,f,c
   695   001610  467C               	rlncf	??_led_initialize^0,f,c
   696   001612  467C               	rlncf	??_led_initialize^0,f,c
   697   001614  5181               	movf	led_initialize@pin_obj& (0+255),w,b
   698   001616  187C               	xorwf	??_led_initialize^0,w,c
   699   001618  0BC7               	andlw	-57
   700   00161A  187C               	xorwf	??_led_initialize^0,w,c
   701   00161C  6F81               	movwf	led_initialize@pin_obj& (0+255),b
   702   00161E                     
   703                           ; BSR set to: 0
   704   00161E  9D81               	bcf	led_initialize@pin_obj& (0+255),6,b
   705   001620                     
   706                           ; BSR set to: 0
   707   001620  507B               	movf	led_initialize@led^0,w,c
   708   001622  6ED9               	movwf	fsr2l,c
   709   001624  6ADA               	clrf	fsr2h,c
   710   001626  AEDF               	btfss	indf2,7,c
   711   001628  D002               	bra	u4365
   712   00162A  8F81               	bsf	led_initialize@pin_obj& (0+255),7,b
   713   00162C  D002               	bra	u4367
   714   00162E                     u4365:
   715   00162E  0100               	movlb	0	; () banked
   716   001630  9F81               	bcf	led_initialize@pin_obj& (0+255),7,b
   717   001632                     u4367:
   718   001632                     
   719                           ; BSR set to: 0
   720                           ;ECU_Layer/LED/ecu_led.c: 24:         gpio_pin_intialize(&pin_obj);
   721   001632  0E81               	movlw	low led_initialize@pin_obj
   722   001634  6E78               	movwf	gpio_pin_intialize@_pin_config^0,c
   723   001636  ECC3  F00B         	call	_gpio_pin_intialize	;wreg free
   724   00163A                     l6212:
   725                           
   726                           ;ECU_Layer/LED/ecu_led.c: 26:     return ret;
   727   00163A  0100               	movlb	0	; () banked
   728   00163C  5180               	movf	led_initialize@ret& (0+255),w,b
   729   00163E                     
   730                           ; BSR set to: 0
   731   00163E  0012               	return		;funcret
   732   001640                     __end_of_led_initialize:
   733                           	callstack 0
   734                           
   735 ;; *************** function _gpio_pin_intialize *****************
   736 ;; Defined at:
   737 ;;		line 146 in file "MCAL_Layer/GPIO/hal_gpio.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  _pin_config     1   10[COMRAM] PTR const struct .
   740 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  ret             1   12[COMRAM] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      unsigned char 
   745 ;; Registers used:
   746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;Total ram usage:        3 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 3
   759 ;; This function calls:
   760 ;;		_gpio_pin_direction_intialize
   761 ;;		_gpio_pin_write_logic
   762 ;; This function is called by:
   763 ;;		_led_initialize
   764 ;;		_seven_segmant_initialize
   765 ;;		_lcd_4bit_intialize
   766 ;;		_lcd_8bit_intialize
   767 ;;		_dc_motor_initialize
   768 ;;		_keypad_initialize
   769 ;;		_relay_initialize
   770 ;;		_CCP_Init
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text2
   775   001786                     __ptext2:
   776                           	callstack 0
   777   001786                     _gpio_pin_intialize:
   778                           	callstack 26
   779   001786                     
   780                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
   781   001786  5078               	movf	gpio_pin_intialize@_pin_config^0,w,c
   782   001788  B4D8               	btfsc	status,2,c
   783   00178A  EFC9  F00B         	goto	u4221
   784   00178E  EFCB  F00B         	goto	u4220
   785   001792                     u4221:
   786   001792  EFDB  F00B         	goto	l6046
   787   001796                     u4220:
   788   001796  5078               	movf	gpio_pin_intialize@_pin_config^0,w,c
   789   001798  6ED9               	movwf	fsr2l,c
   790   00179A  6ADA               	clrf	fsr2h,c
   791   00179C  30DF               	rrcf	223,w,c
   792   00179E  32E8               	rrcf	wreg,f,c
   793   0017A0  32E8               	rrcf	wreg,f,c
   794   0017A2  0B07               	andlw	7
   795   0017A4  6E79               	movwf	??_gpio_pin_intialize^0,c
   796   0017A6  0E07               	movlw	7
   797   0017A8  6479               	cpfsgt	??_gpio_pin_intialize^0,c
   798   0017AA  EFD9  F00B         	goto	u4231
   799   0017AE  EFDB  F00B         	goto	u4230
   800   0017B2                     u4231:
   801   0017B2  EFDF  F00B         	goto	l6048
   802   0017B6                     u4230:
   803   0017B6                     l6046:
   804                           
   805                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:         ret = (Std_ReturnType) 0x00;
   806   0017B6  0E00               	movlw	0
   807   0017B8  6E7A               	movwf	gpio_pin_intialize@ret^0,c
   808                           
   809                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:     }
   810   0017BA  EFF0  F00B         	goto	l6050
   811   0017BE                     l6048:
   812                           
   813                           ;MCAL_Layer/GPIO/hal_gpio.c: 152:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
   814   0017BE  C078  F070         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   815   0017C2  EC09  F008         	call	_gpio_pin_direction_intialize	;wreg free
   816   0017C6  6E7A               	movwf	gpio_pin_intialize@ret^0,c
   817                           
   818                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
   819   0017C8  C078  F070         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
   820   0017CC  5078               	movf	gpio_pin_intialize@_pin_config^0,w,c
   821   0017CE  6ED9               	movwf	fsr2l,c
   822   0017D0  6ADA               	clrf	fsr2h,c
   823   0017D2  0E00               	movlw	0
   824   0017D4  BEDF               	btfsc	indf2,7,c
   825   0017D6  0E01               	movlw	1
   826   0017D8  6E71               	movwf	gpio_pin_write_logic@logic^0,c
   827   0017DA  EC2A  F009         	call	_gpio_pin_write_logic	;wreg free
   828   0017DE  6E7A               	movwf	gpio_pin_intialize@ret^0,c
   829   0017E0                     l6050:
   830                           
   831                           ;MCAL_Layer/GPIO/hal_gpio.c: 155:     return ret;
   832   0017E0  507A               	movf	gpio_pin_intialize@ret^0,w,c
   833   0017E2  0012               	return		;funcret
   834   0017E4                     __end_of_gpio_pin_intialize:
   835                           	callstack 0
   836                           
   837 ;; *************** function _gpio_pin_write_logic *****************
   838 ;; Defined at:
   839 ;;		line 77 in file "MCAL_Layer/GPIO/hal_gpio.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  _pin_config     1    2[COMRAM] PTR const struct .
   842 ;;		 -> lcd_4bit_send_command@lcd$lcd_data(4), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin
      +_obj(1), 
   843 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), lcd_4bit_send_char_data@lcd(2), 
   844 ;;		 -> lcd_4bit_send_command@lcd(2), 
   845 ;;  logic           1    3[COMRAM] enum E2978
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  ret             1    9[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      unsigned char 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        8 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 2
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_gpio_pin_intialize
   868 ;;		_seven_segmant_write_number
   869 ;;		_lcd_4bit_send_command
   870 ;;		_lcd_4bit_send_char_data
   871 ;;		_lcd_8bit_send_command
   872 ;;		_lcd_8bit_send_char_data
   873 ;;		_lcd_send_4bit
   874 ;;		_lcd_4bit_send_enable_signal
   875 ;;		_lcd_8bit_send_enable_signal
   876 ;;		_dc_motor_move_right
   877 ;;		_dc_motor_move_left
   878 ;;		_dc_motor_stop
   879 ;;		_keypad_get_value
   880 ;;		_led_turn_on
   881 ;;		_led_turn_off
   882 ;;		_relay_turn_on
   883 ;;		_relay_turn_off
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text3
   888   001254                     __ptext3:
   889                           	callstack 0
   890   001254                     _gpio_pin_write_logic:
   891                           	callstack 26
   892   001254                     
   893                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     Std_ReturnType ret = (Std_ReturnType) 0x01;
   894   001254  0E01               	movlw	1
   895   001256  6E77               	movwf	gpio_pin_write_logic@ret^0,c
   896                           
   897                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
   898   001258  5070               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   899   00125A  B4D8               	btfsc	status,2,c
   900   00125C  EF32  F009         	goto	u4121
   901   001260  EF34  F009         	goto	u4120
   902   001264                     u4121:
   903   001264  EF44  F009         	goto	l6002
   904   001268                     u4120:
   905   001268  5070               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   906   00126A  6ED9               	movwf	fsr2l,c
   907   00126C  6ADA               	clrf	fsr2h,c
   908   00126E  30DF               	rrcf	223,w,c
   909   001270  32E8               	rrcf	wreg,f,c
   910   001272  32E8               	rrcf	wreg,f,c
   911   001274  0B07               	andlw	7
   912   001276  6E72               	movwf	??_gpio_pin_write_logic^0,c
   913   001278  0E07               	movlw	7
   914   00127A  6472               	cpfsgt	??_gpio_pin_write_logic^0,c
   915   00127C  EF42  F009         	goto	u4131
   916   001280  EF44  F009         	goto	u4130
   917   001284                     u4131:
   918   001284  EF9B  F009         	goto	l6010
   919   001288                     u4130:
   920   001288                     l6002:
   921                           
   922                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:         ret = (Std_ReturnType) 0x00;
   923   001288  0E00               	movlw	0
   924   00128A  6E77               	movwf	gpio_pin_write_logic@ret^0,c
   925                           
   926                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     }
   927   00128C  EFB0  F009         	goto	l6012
   928   001290                     l6004:
   929                           
   930                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
   931   001290  5070               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   932   001292  6ED9               	movwf	fsr2l,c
   933   001294  6ADA               	clrf	fsr2h,c
   934   001296  30DF               	rrcf	223,w,c
   935   001298  32E8               	rrcf	wreg,f,c
   936   00129A  32E8               	rrcf	wreg,f,c
   937   00129C  0B07               	andlw	7
   938   00129E  6E72               	movwf	??_gpio_pin_write_logic^0,c
   939   0012A0  0E01               	movlw	1
   940   0012A2  6E73               	movwf	(??_gpio_pin_write_logic+1)^0,c
   941   0012A4  2A72               	incf	??_gpio_pin_write_logic^0,f,c
   942   0012A6  EF57  F009         	goto	u4144
   943   0012AA                     u4145:
   944   0012AA  90D8               	bcf	status,0,c
   945   0012AC  3673               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   946   0012AE                     u4144:
   947   0012AE  2E72               	decfsz	??_gpio_pin_write_logic^0,f,c
   948   0012B0  EF55  F009         	goto	u4145
   949   0012B4  5073               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   950   0012B6  0AFF               	xorlw	255
   951   0012B8  6E74               	movwf	(??_gpio_pin_write_logic+2)^0,c
   952   0012BA  5070               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   953   0012BC  6ED9               	movwf	fsr2l,c
   954   0012BE  6ADA               	clrf	fsr2h,c
   955   0012C0  50DF               	movf	223,w,c
   956   0012C2  0B07               	andlw	7
   957   0012C4  0D02               	mullw	2
   958   0012C6  50F3               	movf	243,w,c
   959   0012C8  0F4D               	addlw	low _lat_registers
   960   0012CA  6ED9               	movwf	fsr2l,c
   961   0012CC  6ADA               	clrf	fsr2h,c
   962   0012CE  CFDE F075          	movff	postinc2,??_gpio_pin_write_logic+3
   963   0012D2  CFDD F076          	movff	postdec2,??_gpio_pin_write_logic+4
   964   0012D6  C075  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   965   0012DA  C076  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   966   0012DE  5074               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   967   0012E0  16DF               	andwf	indf2,f,c
   968                           
   969                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 break;
   970   0012E2  EFB0  F009         	goto	l6012
   971   0012E6                     l6006:
   972                           
   973                           ;MCAL_Layer/GPIO/hal_gpio.c: 88:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
   974   0012E6  5070               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   975   0012E8  6ED9               	movwf	fsr2l,c
   976   0012EA  6ADA               	clrf	fsr2h,c
   977   0012EC  30DF               	rrcf	223,w,c
   978   0012EE  32E8               	rrcf	wreg,f,c
   979   0012F0  32E8               	rrcf	wreg,f,c
   980   0012F2  0B07               	andlw	7
   981   0012F4  6E72               	movwf	??_gpio_pin_write_logic^0,c
   982   0012F6  0E01               	movlw	1
   983   0012F8  6E73               	movwf	(??_gpio_pin_write_logic+1)^0,c
   984   0012FA  2A72               	incf	??_gpio_pin_write_logic^0,f,c
   985   0012FC  EF82  F009         	goto	u4154
   986   001300                     u4155:
   987   001300  90D8               	bcf	status,0,c
   988   001302  3673               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   989   001304                     u4154:
   990   001304  2E72               	decfsz	??_gpio_pin_write_logic^0,f,c
   991   001306  EF80  F009         	goto	u4155
   992   00130A  5070               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   993   00130C  6ED9               	movwf	fsr2l,c
   994   00130E  6ADA               	clrf	fsr2h,c
   995   001310  50DF               	movf	223,w,c
   996   001312  0B07               	andlw	7
   997   001314  0D02               	mullw	2
   998   001316  50F3               	movf	243,w,c
   999   001318  0F4D               	addlw	low _lat_registers
  1000   00131A  6ED9               	movwf	fsr2l,c
  1001   00131C  6ADA               	clrf	fsr2h,c
  1002   00131E  CFDE F074          	movff	postinc2,??_gpio_pin_write_logic+2
  1003   001322  CFDD F075          	movff	postdec2,??_gpio_pin_write_logic+3
  1004   001326  C074  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1005   00132A  C075  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1006   00132E  5073               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1007   001330  12DF               	iorwf	indf2,f,c
  1008                           
  1009                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 break;
  1010   001332  EFB0  F009         	goto	l6012
  1011   001336                     l6010:
  1012   001336  5071               	movf	gpio_pin_write_logic@logic^0,w,c
  1013   001338  6E72               	movwf	??_gpio_pin_write_logic^0,c
  1014   00133A  6A73               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1015                           
  1016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1017                           ; Switch size 1, requested type "simple"
  1018                           ; Number of cases is 1, Range of values is 0 to 0
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte            4     3 (average)
  1022                           ;	Chosen strategy is simple_byte
  1023   00133C  5073               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1024   00133E  0A00               	xorlw	0	; case 0
  1025   001340  B4D8               	btfsc	status,2,c
  1026   001342  EFA5  F009         	goto	l6930
  1027   001346  EF44  F009         	goto	l6002
  1028   00134A                     l6930:
  1029                           
  1030                           ; Switch size 1, requested type "simple"
  1031                           ; Number of cases is 2, Range of values is 0 to 1
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte            7     4 (average)
  1035                           ;	Chosen strategy is simple_byte
  1036   00134A  5072               	movf	??_gpio_pin_write_logic^0,w,c
  1037   00134C  0A00               	xorlw	0	; case 0
  1038   00134E  B4D8               	btfsc	status,2,c
  1039   001350  EF48  F009         	goto	l6004
  1040   001354  0A01               	xorlw	1	; case 1
  1041   001356  B4D8               	btfsc	status,2,c
  1042   001358  EF73  F009         	goto	l6006
  1043   00135C  EF44  F009         	goto	l6002
  1044   001360                     l6012:
  1045                           
  1046                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:     return ret;
  1047   001360  5077               	movf	gpio_pin_write_logic@ret^0,w,c
  1048   001362  0012               	return		;funcret
  1049   001364                     __end_of_gpio_pin_write_logic:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _application_intialize *****************
  1053 ;; Defined at:
  1054 ;;		line 42 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  ret             1    0        unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;Total ram usage:        0 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 3
  1075 ;; This function calls:
  1076 ;;		_ecu_layer_intialize
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text4
  1083   00192E                     __ptext4:
  1084                           	callstack 0
  1085   00192E                     _application_intialize:
  1086                           	callstack 27
  1087   00192E                     
  1088                           ;main.c: 44:     ecu_layer_intialize();
  1089   00192E  EC9A  F00C         	call	_ecu_layer_intialize	;wreg free
  1090   001932  0012               	return		;funcret
  1091   001934                     __end_of_application_intialize:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _ecu_layer_intialize *****************
  1095 ;; Defined at:
  1096 ;;		line 136 in file "ECU_Layer/ecu_layer_init.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  ret             1    0        unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 2
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_application_intialize
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text5
  1125   001934                     __ptext5:
  1126                           	callstack 0
  1127   001934                     _ecu_layer_intialize:
  1128                           	callstack 27
  1129   001934  0012               	return		;funcret
  1130   001936                     __end_of_ecu_layer_intialize:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _Interrupt_INTx_Init *****************
  1134 ;; Defined at:
  1135 ;;		line 56 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  int_obj         1   11[COMRAM] PTR const struct .
  1138 ;;		 -> int0_obj(6), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  ret             1   12[COMRAM] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      unsigned char 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        2 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 4
  1157 ;; This function calls:
  1158 ;;		_Interrupt_INTx_Clear_Flag
  1159 ;;		_Interrupt_INTx_Disable
  1160 ;;		_Interrupt_INTx_Edge_Init
  1161 ;;		_Interrupt_INTx_Enable
  1162 ;;		_Interrupt_INTx_Pin_Init
  1163 ;;		_Interrupt_INTx_Priority_Init
  1164 ;;		_Interrupt_INTx_SetInterruptHandler
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text6
  1171   001724                     __ptext6:
  1172                           	callstack 0
  1173   001724                     _Interrupt_INTx_Init:
  1174                           	callstack 26
  1175   001724                     
  1176                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 58:     if(((void*)0) == int_obj){
  1177   001724  5079               	movf	Interrupt_INTx_Init@int_obj^0,w,c
  1178   001726  A4D8               	btfss	status,2,c
  1179   001728  EF98  F00B         	goto	u4371
  1180   00172C  EF9A  F00B         	goto	u4370
  1181   001730                     u4371:
  1182   001730  EF9E  F00B         	goto	l6220
  1183   001734                     u4370:
  1184   001734                     
  1185                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 59:         ret = (Std_ReturnType) 0x00
      +                          ;
  1186   001734  0E00               	movlw	0
  1187   001736  6E7A               	movwf	Interrupt_INTx_Init@ret^0,c
  1188                           
  1189                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 60:     }
  1190   001738  EFC1  F00B         	goto	l6228
  1191   00173C                     l6220:
  1192                           
  1193                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 64:         ret = Interrupt_INTx_Disabl
      +                          e(int_obj);
  1194   00173C  C079  F070         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Disable@int_obj
  1195   001740  EC20  F00B         	call	_Interrupt_INTx_Disable	;wreg free
  1196   001744  6E7A               	movwf	Interrupt_INTx_Init@ret^0,c
  1197                           
  1198                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 68:         ret |= Interrupt_INTx_Clear
      +                          _Flag(int_obj);
  1199   001746  C079  F070         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Clear_Flag@int_obj
  1200   00174A  EC59  F00B         	call	_Interrupt_INTx_Clear_Flag	;wreg free
  1201   00174E  127A               	iorwf	Interrupt_INTx_Init@ret^0,f,c
  1202                           
  1203                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 72:         ret |= Interrupt_INTx_Edge_
      +                          Init(int_obj);
  1204   001750  C079  F070         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Edge_Init@int_obj
  1205   001754  EC9C  F008         	call	_Interrupt_INTx_Edge_Init	;wreg free
  1206   001758  127A               	iorwf	Interrupt_INTx_Init@ret^0,f,c
  1207                           
  1208                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:         ret |= Interrupt_INTx_Prior
      +                          ity_Init(&int_obj);
  1209   00175A  0E79               	movlw	low Interrupt_INTx_Init@int_obj
  1210   00175C  6E70               	movwf	Interrupt_INTx_Priority_Init@int_obj^0,c
  1211   00175E  EC2A  F00A         	call	_Interrupt_INTx_Priority_Init	;wreg free
  1212   001762  127A               	iorwf	Interrupt_INTx_Init@ret^0,f,c
  1213   001764                     
  1214                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 80:         ret |= Interrupt_INTx_Pin_I
      +                          nit(int_obj);
  1215   001764  C079  F077         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Pin_Init@int_obj
  1216   001768  EC62  F00C         	call	_Interrupt_INTx_Pin_Init	;wreg free
  1217   00176C  127A               	iorwf	Interrupt_INTx_Init@ret^0,f,c
  1218   00176E                     
  1219                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 84:         ret |= Interrupt_INTx_SetIn
      +                          terruptHandler(int_obj);
  1220   00176E  C079  F073         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_SetInterruptHandler@int_obj
  1221   001772  EC94  F00A         	call	_Interrupt_INTx_SetInterruptHandler	;wreg free
  1222   001776  127A               	iorwf	Interrupt_INTx_Init@ret^0,f,c
  1223   001778                     
  1224                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:         ret |= Interrupt_INTx_Enabl
      +                          e(int_obj);
  1225   001778  C079  F070         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Enable@int_obj
  1226   00177C  ECB2  F009         	call	_Interrupt_INTx_Enable	;wreg free
  1227   001780  127A               	iorwf	Interrupt_INTx_Init@ret^0,f,c
  1228   001782                     l6228:
  1229                           
  1230                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 91:     return ret;
  1231   001782  507A               	movf	Interrupt_INTx_Init@ret^0,w,c
  1232   001784  0012               	return		;funcret
  1233   001786                     __end_of_Interrupt_INTx_Init:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _Interrupt_INTx_SetInterruptHandler *****************
  1237 ;; Defined at:
  1238 ;;		line 547 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  int_obj         1    5[COMRAM] PTR const struct .
  1241 ;;		 -> int0_obj(6), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  ret             1    8[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      unsigned char 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        4 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 3
  1260 ;; This function calls:
  1261 ;;		_INT0_SetInterruptHandler
  1262 ;;		_INT1_SetInterruptHandler
  1263 ;;		_INT2_SetInterruptHandler
  1264 ;; This function is called by:
  1265 ;;		_Interrupt_INTx_Init
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text7
  1270   001528                     __ptext7:
  1271                           	callstack 0
  1272   001528                     _Interrupt_INTx_SetInterruptHandler:
  1273                           	callstack 26
  1274   001528                     
  1275                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 549:     if(((void*)0) == int_obj){
  1276   001528  5073               	movf	Interrupt_INTx_SetInterruptHandler@int_obj^0,w,c
  1277   00152A  A4D8               	btfss	status,2,c
  1278   00152C  EF9A  F00A         	goto	u3441
  1279   001530  EF9C  F00A         	goto	u3440
  1280   001534                     u3441:
  1281   001534  EFC3  F00A         	goto	l5276
  1282   001538                     u3440:
  1283   001538                     
  1284                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 550:         ret = (Std_ReturnType) 0x0
      +                          0;
  1285   001538  0E00               	movlw	0
  1286   00153A  6E76               	movwf	Interrupt_INTx_SetInterruptHandler@ret^0,c
  1287                           
  1288                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 551:     }
  1289   00153C  EFE3  F00A         	goto	l980
  1290   001540                     l5268:
  1291   001540  5073               	movf	Interrupt_INTx_SetInterruptHandler@int_obj^0,w,c
  1292   001542  6ED9               	movwf	fsr2l,c
  1293   001544  6ADA               	clrf	fsr2h,c
  1294   001546  CFDE F070          	movff	postinc2,INT0_SetInterruptHandler@InterruptHandler
  1295   00154A  CFDD F071          	movff	postdec2,INT0_SetInterruptHandler@InterruptHandler+1
  1296   00154E  EC4D  F00C         	call	_INT0_SetInterruptHandler	;wreg free
  1297                           
  1298                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 556:                 break;
  1299   001552  EFE1  F00A         	goto	l5278
  1300   001556                     l5270:
  1301   001556  5073               	movf	Interrupt_INTx_SetInterruptHandler@int_obj^0,w,c
  1302   001558  6ED9               	movwf	fsr2l,c
  1303   00155A  6ADA               	clrf	fsr2h,c
  1304   00155C  CFDE F070          	movff	postinc2,INT1_SetInterruptHandler@InterruptHandler
  1305   001560  CFDD F071          	movff	postdec2,INT1_SetInterruptHandler@InterruptHandler+1
  1306   001564  EC38  F00C         	call	_INT1_SetInterruptHandler	;wreg free
  1307                           
  1308                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 559:                 break;
  1309   001568  EFE1  F00A         	goto	l5278
  1310   00156C                     l5272:
  1311   00156C  5073               	movf	Interrupt_INTx_SetInterruptHandler@int_obj^0,w,c
  1312   00156E  6ED9               	movwf	fsr2l,c
  1313   001570  6ADA               	clrf	fsr2h,c
  1314   001572  CFDE F070          	movff	postinc2,INT2_SetInterruptHandler@InterruptHandler
  1315   001576  CFDD F071          	movff	postdec2,INT2_SetInterruptHandler@InterruptHandler+1
  1316   00157A  EC23  F00C         	call	_INT2_SetInterruptHandler	;wreg free
  1317                           
  1318                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 562:                 break;
  1319   00157E  EFE1  F00A         	goto	l5278
  1320   001582                     l5274:
  1321                           
  1322                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 564:         }
  1323   001582  EFE1  F00A         	goto	l5278
  1324   001586                     l5276:
  1325   001586  5073               	movf	Interrupt_INTx_SetInterruptHandler@int_obj^0,w,c
  1326   001588  6ED9               	movwf	fsr2l,c
  1327   00158A  6ADA               	clrf	fsr2h,c
  1328   00158C  0E04               	movlw	4
  1329   00158E  26D9               	addwf	fsr2l,f,c
  1330   001590  50DF               	movf	indf2,w,c
  1331   001592  6E74               	movwf	??_Interrupt_INTx_SetInterruptHandler^0,c
  1332   001594  6A75               	clrf	(??_Interrupt_INTx_SetInterruptHandler+1)^0,c
  1333                           
  1334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1335                           ; Switch size 1, requested type "simple"
  1336                           ; Number of cases is 1, Range of values is 0 to 0
  1337                           ; switch strategies available:
  1338                           ; Name         Instructions Cycles
  1339                           ; simple_byte            4     3 (average)
  1340                           ;	Chosen strategy is simple_byte
  1341   001596  5075               	movf	(??_Interrupt_INTx_SetInterruptHandler+1)^0,w,c
  1342   001598  0A00               	xorlw	0	; case 0
  1343   00159A  B4D8               	btfsc	status,2,c
  1344   00159C  EFD2  F00A         	goto	l6932
  1345   0015A0  EFC1  F00A         	goto	l5274
  1346   0015A4                     l6932:
  1347                           
  1348                           ; Switch size 1, requested type "simple"
  1349                           ; Number of cases is 3, Range of values is 0 to 2
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte           10     6 (average)
  1353                           ;	Chosen strategy is simple_byte
  1354   0015A4  5074               	movf	??_Interrupt_INTx_SetInterruptHandler^0,w,c
  1355   0015A6  0A00               	xorlw	0	; case 0
  1356   0015A8  B4D8               	btfsc	status,2,c
  1357   0015AA  EFA0  F00A         	goto	l5268
  1358   0015AE  0A01               	xorlw	1	; case 1
  1359   0015B0  B4D8               	btfsc	status,2,c
  1360   0015B2  EFAB  F00A         	goto	l5270
  1361   0015B6  0A03               	xorlw	3	; case 2
  1362   0015B8  B4D8               	btfsc	status,2,c
  1363   0015BA  EFB6  F00A         	goto	l5272
  1364   0015BE  EFC1  F00A         	goto	l5274
  1365   0015C2                     l5278:
  1366                           
  1367                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 565:         ret = (Std_ReturnType) 0x0
      +                          1;
  1368   0015C2  0E01               	movlw	1
  1369   0015C4  6E76               	movwf	Interrupt_INTx_SetInterruptHandler@ret^0,c
  1370   0015C6                     l980:
  1371                           
  1372                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 567:     return ret;
  1373   0015C6  5076               	movf	Interrupt_INTx_SetInterruptHandler@ret^0,w,c
  1374   0015C8  0012               	return		;funcret
  1375   0015CA                     __end_of_Interrupt_INTx_SetInterruptHandler:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _INT2_SetInterruptHandler *****************
  1379 ;; Defined at:
  1380 ;;		line 530 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1383 ;;		 -> Int0_ISR(1), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  ret             1    4[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:        3 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_Interrupt_INTx_SetInterruptHandler
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text8
  1410   001846                     __ptext8:
  1411                           	callstack 0
  1412   001846                     _INT2_SetInterruptHandler:
  1413                           	callstack 26
  1414   001846                     
  1415                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 532:     if(((void*)0) == InterruptHand
      +                          ler){
  1416   001846  5070               	movf	INT2_SetInterruptHandler@InterruptHandler^0,w,c
  1417   001848  1071               	iorwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,w,c
  1418   00184A  A4D8               	btfss	status,2,c
  1419   00184C  EF2A  F00C         	goto	u3221
  1420   001850  EF2C  F00C         	goto	u3220
  1421   001854                     u3221:
  1422   001854  EF30  F00C         	goto	l5034
  1423   001858                     u3220:
  1424   001858                     
  1425                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 533:         ret = (Std_ReturnType) 0x0
      +                          0;
  1426   001858  0E00               	movlw	0
  1427   00185A  6E72               	movwf	INT2_SetInterruptHandler@ret^0,c
  1428                           
  1429                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 534:     }
  1430   00185C  EF36  F00C         	goto	l5038
  1431   001860                     l5034:
  1432                           
  1433                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 536:         INT2_InterruptHandler = In
      +                          terruptHandler;
  1434   001860  C070  F02D         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1435   001864  C071  F02E         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1436   001868                     
  1437                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 537:         ret = (Std_ReturnType) 0x0
      +                          1;
  1438   001868  0E01               	movlw	1
  1439   00186A  6E72               	movwf	INT2_SetInterruptHandler@ret^0,c
  1440   00186C                     l5038:
  1441                           
  1442                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 539:     return ret;
  1443   00186C  5072               	movf	INT2_SetInterruptHandler@ret^0,w,c
  1444   00186E  0012               	return		;funcret
  1445   001870                     __end_of_INT2_SetInterruptHandler:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function _INT1_SetInterruptHandler *****************
  1449 ;; Defined at:
  1450 ;;		line 513 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1453 ;;		 -> Int0_ISR(1), 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  ret             1    4[COMRAM] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      unsigned char 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;Total ram usage:        3 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 2
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_Interrupt_INTx_SetInterruptHandler
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text9
  1480   001870                     __ptext9:
  1481                           	callstack 0
  1482   001870                     _INT1_SetInterruptHandler:
  1483                           	callstack 26
  1484   001870                     
  1485                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 515:     if(((void*)0) == InterruptHand
      +                          ler){
  1486   001870  5070               	movf	INT1_SetInterruptHandler@InterruptHandler^0,w,c
  1487   001872  1071               	iorwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,w,c
  1488   001874  A4D8               	btfss	status,2,c
  1489   001876  EF3F  F00C         	goto	u3211
  1490   00187A  EF41  F00C         	goto	u3210
  1491   00187E                     u3211:
  1492   00187E  EF45  F00C         	goto	l5020
  1493   001882                     u3210:
  1494   001882                     
  1495                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 516:         ret = (Std_ReturnType) 0x0
      +                          0;
  1496   001882  0E00               	movlw	0
  1497   001884  6E72               	movwf	INT1_SetInterruptHandler@ret^0,c
  1498                           
  1499                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 517:     }
  1500   001886  EF4B  F00C         	goto	l5024
  1501   00188A                     l5020:
  1502                           
  1503                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 519:         INT1_InterruptHandler = In
      +                          terruptHandler;
  1504   00188A  C070  F02F         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1505   00188E  C071  F030         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1506   001892                     
  1507                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 520:         ret = (Std_ReturnType) 0x0
      +                          1;
  1508   001892  0E01               	movlw	1
  1509   001894  6E72               	movwf	INT1_SetInterruptHandler@ret^0,c
  1510   001896                     l5024:
  1511                           
  1512                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 522:     return ret;
  1513   001896  5072               	movf	INT1_SetInterruptHandler@ret^0,w,c
  1514   001898  0012               	return		;funcret
  1515   00189A                     __end_of_INT1_SetInterruptHandler:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _INT0_SetInterruptHandler *****************
  1519 ;; Defined at:
  1520 ;;		line 496 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1523 ;;		 -> Int0_ISR(1), 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  ret             1    4[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      unsigned char 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;Total ram usage:        3 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 2
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_Interrupt_INTx_SetInterruptHandler
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text10
  1550   00189A                     __ptext10:
  1551                           	callstack 0
  1552   00189A                     _INT0_SetInterruptHandler:
  1553                           	callstack 26
  1554   00189A                     
  1555                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 498:     if(((void*)0) == InterruptHand
      +                          ler){
  1556   00189A  5070               	movf	INT0_SetInterruptHandler@InterruptHandler^0,w,c
  1557   00189C  1071               	iorwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,w,c
  1558   00189E  A4D8               	btfss	status,2,c
  1559   0018A0  EF54  F00C         	goto	u3201
  1560   0018A4  EF56  F00C         	goto	u3200
  1561   0018A8                     u3201:
  1562   0018A8  EF5A  F00C         	goto	l5006
  1563   0018AC                     u3200:
  1564   0018AC                     
  1565                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 499:         ret = (Std_ReturnType) 0x0
      +                          0;
  1566   0018AC  0E00               	movlw	0
  1567   0018AE  6E72               	movwf	INT0_SetInterruptHandler@ret^0,c
  1568                           
  1569                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 500:     }
  1570   0018B0  EF60  F00C         	goto	l5010
  1571   0018B4                     l5006:
  1572                           
  1573                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 502:         INT0_InterruptHandler = In
      +                          terruptHandler;
  1574   0018B4  C070  F031         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1575   0018B8  C071  F032         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1576   0018BC                     
  1577                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 503:         ret = (Std_ReturnType) 0x0
      +                          1;
  1578   0018BC  0E01               	movlw	1
  1579   0018BE  6E72               	movwf	INT0_SetInterruptHandler@ret^0,c
  1580   0018C0                     l5010:
  1581                           
  1582                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 505:     return ret;
  1583   0018C0  5072               	movf	INT0_SetInterruptHandler@ret^0,w,c
  1584   0018C2  0012               	return		;funcret
  1585   0018C4                     __end_of_INT0_SetInterruptHandler:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _Interrupt_INTx_Priority_Init *****************
  1589 ;; Defined at:
  1590 ;;		line 307 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  int_obj         1    2[COMRAM] PTR const struct .
  1593 ;;		 -> Interrupt_INTx_Init@int_obj(1), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  ret             1    5[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      unsigned char 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;Total ram usage:        4 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 2
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_Interrupt_INTx_Init
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text11
  1620   001454                     __ptext11:
  1621                           	callstack 0
  1622   001454                     _Interrupt_INTx_Priority_Init:
  1623                           	callstack 27
  1624   001454                     
  1625                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 309:     if(((void*)0) == int_obj){
  1626   001454  5070               	movf	Interrupt_INTx_Priority_Init@int_obj^0,w,c
  1627   001456  A4D8               	btfss	status,2,c
  1628   001458  EF30  F00A         	goto	u3381
  1629   00145C  EF32  F00A         	goto	u3380
  1630   001460                     u3381:
  1631   001460  EF78  F00A         	goto	l5244
  1632   001464                     u3380:
  1633   001464                     l5220:
  1634                           
  1635                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 310:         ret = (Std_ReturnType) 0x0
      +                          0;
  1636   001464  0E00               	movlw	0
  1637   001466  6E73               	movwf	Interrupt_INTx_Priority_Init@ret^0,c
  1638                           
  1639                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 311:     }
  1640   001468  EF92  F00A         	goto	l5246
  1641   00146C                     l5222:
  1642                           
  1643                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 315:                 if(INTERRUPT_LOW_P
      +                          RIORITY == int_obj->priority){ (INTCON3bits.INT1IP = 1); }
  1644   00146C  5070               	movf	Interrupt_INTx_Priority_Init@int_obj^0,w,c
  1645   00146E  6ED9               	movwf	fsr2l,c
  1646   001470  6ADA               	clrf	fsr2h,c
  1647   001472  0E05               	movlw	5
  1648   001474  26D9               	addwf	fsr2l,f,c
  1649   001476  50DF               	movf	indf2,w,c
  1650   001478  A4D8               	btfss	status,2,c
  1651   00147A  EF41  F00A         	goto	u3391
  1652   00147E  EF43  F00A         	goto	u3390
  1653   001482                     u3391:
  1654   001482  EF46  F00A         	goto	l5226
  1655   001486                     u3390:
  1656   001486  8CF0               	bsf	240,6,c	;volatile
  1657   001488  EF54  F00A         	goto	l5230
  1658   00148C                     l5226:
  1659   00148C  5070               	movf	Interrupt_INTx_Priority_Init@int_obj^0,w,c
  1660   00148E  6ED9               	movwf	fsr2l,c
  1661   001490  6ADA               	clrf	fsr2h,c
  1662   001492  0E05               	movlw	5
  1663   001494  26D9               	addwf	fsr2l,f,c
  1664   001496  04DE               	decf	postinc2,w,c
  1665   001498  A4D8               	btfss	status,2,c
  1666   00149A  EF51  F00A         	goto	u3401
  1667   00149E  EF53  F00A         	goto	u3400
  1668   0014A2                     u3401:
  1669   0014A2  EF54  F00A         	goto	l5230
  1670   0014A6                     u3400:
  1671   0014A6  9CF0               	bcf	240,6,c	;volatile
  1672   0014A8                     l5230:
  1673                           
  1674                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 318:                 ret = (Std_ReturnT
      +                          ype) 0x01;
  1675   0014A8  0E01               	movlw	1
  1676   0014AA  6E73               	movwf	Interrupt_INTx_Priority_Init@ret^0,c
  1677                           
  1678                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 319:                 break;
  1679   0014AC  EF92  F00A         	goto	l5246
  1680   0014B0                     l5232:
  1681                           
  1682                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 321:                 if(INTERRUPT_LOW_P
      +                          RIORITY == int_obj->priority){ (INTCON3bits.INT2IP = 0); }
  1683   0014B0  5070               	movf	Interrupt_INTx_Priority_Init@int_obj^0,w,c
  1684   0014B2  6ED9               	movwf	fsr2l,c
  1685   0014B4  6ADA               	clrf	fsr2h,c
  1686   0014B6  0E05               	movlw	5
  1687   0014B8  26D9               	addwf	fsr2l,f,c
  1688   0014BA  50DF               	movf	indf2,w,c
  1689   0014BC  A4D8               	btfss	status,2,c
  1690   0014BE  EF63  F00A         	goto	u3411
  1691   0014C2  EF65  F00A         	goto	u3410
  1692   0014C6                     u3411:
  1693   0014C6  EF68  F00A         	goto	l5236
  1694   0014CA                     u3410:
  1695   0014CA  9EF0               	bcf	240,7,c	;volatile
  1696   0014CC  EF54  F00A         	goto	l5230
  1697   0014D0                     l5236:
  1698   0014D0  5070               	movf	Interrupt_INTx_Priority_Init@int_obj^0,w,c
  1699   0014D2  6ED9               	movwf	fsr2l,c
  1700   0014D4  6ADA               	clrf	fsr2h,c
  1701   0014D6  0E05               	movlw	5
  1702   0014D8  26D9               	addwf	fsr2l,f,c
  1703   0014DA  04DE               	decf	postinc2,w,c
  1704   0014DC  A4D8               	btfss	status,2,c
  1705   0014DE  EF73  F00A         	goto	u3421
  1706   0014E2  EF75  F00A         	goto	u3420
  1707   0014E6                     u3421:
  1708   0014E6  EF54  F00A         	goto	l5230
  1709   0014EA                     u3420:
  1710   0014EA  8EF0               	bsf	240,7,c	;volatile
  1711   0014EC  EF54  F00A         	goto	l5230
  1712   0014F0                     l5244:
  1713   0014F0  5070               	movf	Interrupt_INTx_Priority_Init@int_obj^0,w,c
  1714   0014F2  6ED9               	movwf	fsr2l,c
  1715   0014F4  6ADA               	clrf	fsr2h,c
  1716   0014F6  0E04               	movlw	4
  1717   0014F8  26D9               	addwf	fsr2l,f,c
  1718   0014FA  50DF               	movf	indf2,w,c
  1719   0014FC  6E71               	movwf	??_Interrupt_INTx_Priority_Init^0,c
  1720   0014FE  6A72               	clrf	(??_Interrupt_INTx_Priority_Init+1)^0,c
  1721                           
  1722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1723                           ; Switch size 1, requested type "simple"
  1724                           ; Number of cases is 1, Range of values is 0 to 0
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; simple_byte            4     3 (average)
  1728                           ;	Chosen strategy is simple_byte
  1729   001500  5072               	movf	(??_Interrupt_INTx_Priority_Init+1)^0,w,c
  1730   001502  0A00               	xorlw	0	; case 0
  1731   001504  B4D8               	btfsc	status,2,c
  1732   001506  EF87  F00A         	goto	l6934
  1733   00150A  EF32  F00A         	goto	l5220
  1734   00150E                     l6934:
  1735                           
  1736                           ; Switch size 1, requested type "simple"
  1737                           ; Number of cases is 2, Range of values is 1 to 2
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte            7     4 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742   00150E  5071               	movf	??_Interrupt_INTx_Priority_Init^0,w,c
  1743   001510  0A01               	xorlw	1	; case 1
  1744   001512  B4D8               	btfsc	status,2,c
  1745   001514  EF36  F00A         	goto	l5222
  1746   001518  0A03               	xorlw	3	; case 2
  1747   00151A  B4D8               	btfsc	status,2,c
  1748   00151C  EF58  F00A         	goto	l5232
  1749   001520  EF32  F00A         	goto	l5220
  1750   001524                     l5246:
  1751                           
  1752                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 329:     return ret;
  1753   001524  5073               	movf	Interrupt_INTx_Priority_Init@ret^0,w,c
  1754   001526  0012               	return		;funcret
  1755   001528                     __end_of_Interrupt_INTx_Priority_Init:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _Interrupt_INTx_Pin_Init *****************
  1759 ;; Defined at:
  1760 ;;		line 375 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  int_obj         1    9[COMRAM] PTR const struct .
  1763 ;;		 -> int0_obj(6), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  ret             1   10[COMRAM] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      unsigned char 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1775 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;Total ram usage:        2 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 3
  1782 ;; This function calls:
  1783 ;;		_gpio_pin_direction_intialize
  1784 ;; This function is called by:
  1785 ;;		_Interrupt_INTx_Init
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text12
  1790   0018C4                     __ptext12:
  1791                           	callstack 0
  1792   0018C4                     _Interrupt_INTx_Pin_Init:
  1793                           	callstack 26
  1794   0018C4                     
  1795                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 377:     if(((void*)0) == int_obj){
  1796   0018C4  5077               	movf	Interrupt_INTx_Pin_Init@int_obj^0,w,c
  1797   0018C6  A4D8               	btfss	status,2,c
  1798   0018C8  EF68  F00C         	goto	u4281
  1799   0018CC  EF6A  F00C         	goto	u4280
  1800   0018D0                     u4281:
  1801   0018D0  EF6E  F00C         	goto	l6132
  1802   0018D4                     u4280:
  1803   0018D4                     
  1804                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 378:         ret = (Std_ReturnType) 0x0
      +                          0;
  1805   0018D4  0E00               	movlw	0
  1806   0018D6  6E78               	movwf	Interrupt_INTx_Pin_Init@ret^0,c
  1807                           
  1808                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 379:     }
  1809   0018D8  EF74  F00C         	goto	l6134
  1810   0018DC                     l6132:
  1811                           
  1812                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 381:         ret = gpio_pin_direction_i
      +                          ntialize(&(int_obj->mcu_pin));
  1813   0018DC  5077               	movf	Interrupt_INTx_Pin_Init@int_obj^0,w,c
  1814   0018DE  0F02               	addlw	2
  1815   0018E0  6E70               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1816   0018E2  EC09  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1817   0018E6  6E78               	movwf	Interrupt_INTx_Pin_Init@ret^0,c
  1818   0018E8                     l6134:
  1819                           
  1820                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 383:     return ret;
  1821   0018E8  5078               	movf	Interrupt_INTx_Pin_Init@ret^0,w,c
  1822   0018EA  0012               	return		;funcret
  1823   0018EC                     __end_of_Interrupt_INTx_Pin_Init:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _gpio_pin_direction_intialize *****************
  1827 ;; Defined at:
  1828 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  _pin_config     1    2[COMRAM] PTR const struct .
  1831 ;;		 -> int0_obj(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  ret             1    8[COMRAM] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      unsigned char 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        7 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 2
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_gpio_pin_intialize
  1854 ;;		_Interrupt_INTx_Pin_Init
  1855 ;;		_keypad_initialize
  1856 ;;		_button_initialize
  1857 ;;		_Interrupt_RBx_Init
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text13
  1862   001012                     __ptext13:
  1863                           	callstack 0
  1864   001012                     _gpio_pin_direction_intialize:
  1865                           	callstack 26
  1866   001012                     
  1867                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType) 0x01;
  1868   001012  0E01               	movlw	1
  1869   001014  6E76               	movwf	gpio_pin_direction_intialize@ret^0,c
  1870                           
  1871                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1872   001016  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1873   001018  B4D8               	btfsc	status,2,c
  1874   00101A  EF11  F008         	goto	u4161
  1875   00101E  EF13  F008         	goto	u4160
  1876   001022                     u4161:
  1877   001022  EF23  F008         	goto	l6024
  1878   001026                     u4160:
  1879   001026  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1880   001028  6ED9               	movwf	fsr2l,c
  1881   00102A  6ADA               	clrf	fsr2h,c
  1882   00102C  30DF               	rrcf	223,w,c
  1883   00102E  32E8               	rrcf	wreg,f,c
  1884   001030  32E8               	rrcf	wreg,f,c
  1885   001032  0B07               	andlw	7
  1886   001034  6E71               	movwf	??_gpio_pin_direction_intialize^0,c
  1887   001036  0E07               	movlw	7
  1888   001038  6471               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1889   00103A  EF21  F008         	goto	u4171
  1890   00103E  EF23  F008         	goto	u4170
  1891   001042                     u4171:
  1892   001042  EF7A  F008         	goto	l6032
  1893   001046                     u4170:
  1894   001046                     l6024:
  1895                           
  1896                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType) 0x00;
  1897   001046  0E00               	movlw	0
  1898   001048  6E76               	movwf	gpio_pin_direction_intialize@ret^0,c
  1899                           
  1900                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  1901   00104A  EF9A  F008         	goto	l6034
  1902   00104E                     l6026:
  1903                           
  1904                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1905   00104E  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1906   001050  6ED9               	movwf	fsr2l,c
  1907   001052  6ADA               	clrf	fsr2h,c
  1908   001054  30DF               	rrcf	223,w,c
  1909   001056  32E8               	rrcf	wreg,f,c
  1910   001058  32E8               	rrcf	wreg,f,c
  1911   00105A  0B07               	andlw	7
  1912   00105C  6E71               	movwf	??_gpio_pin_direction_intialize^0,c
  1913   00105E  0E01               	movlw	1
  1914   001060  6E72               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1915   001062  2A71               	incf	??_gpio_pin_direction_intialize^0,f,c
  1916   001064  EF36  F008         	goto	u4184
  1917   001068                     u4185:
  1918   001068  90D8               	bcf	status,0,c
  1919   00106A  3672               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1920   00106C                     u4184:
  1921   00106C  2E71               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1922   00106E  EF34  F008         	goto	u4185
  1923   001072  5072               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1924   001074  0AFF               	xorlw	255
  1925   001076  6E73               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1926   001078  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1927   00107A  6ED9               	movwf	fsr2l,c
  1928   00107C  6ADA               	clrf	fsr2h,c
  1929   00107E  50DF               	movf	223,w,c
  1930   001080  0B07               	andlw	7
  1931   001082  0D02               	mullw	2
  1932   001084  50F3               	movf	243,w,c
  1933   001086  0F57               	addlw	low _tris_registers
  1934   001088  6ED9               	movwf	fsr2l,c
  1935   00108A  6ADA               	clrf	fsr2h,c
  1936   00108C  CFDE F074          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1937   001090  CFDD F075          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1938   001094  C074  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1939   001098  C075  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1940   00109C  5073               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1941   00109E  16DF               	andwf	indf2,f,c
  1942                           
  1943                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  1944   0010A0  EF9A  F008         	goto	l6034
  1945   0010A4                     l6028:
  1946                           
  1947                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1948   0010A4  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1949   0010A6  6ED9               	movwf	fsr2l,c
  1950   0010A8  6ADA               	clrf	fsr2h,c
  1951   0010AA  30DF               	rrcf	223,w,c
  1952   0010AC  32E8               	rrcf	wreg,f,c
  1953   0010AE  32E8               	rrcf	wreg,f,c
  1954   0010B0  0B07               	andlw	7
  1955   0010B2  6E71               	movwf	??_gpio_pin_direction_intialize^0,c
  1956   0010B4  0E01               	movlw	1
  1957   0010B6  6E72               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1958   0010B8  2A71               	incf	??_gpio_pin_direction_intialize^0,f,c
  1959   0010BA  EF61  F008         	goto	u4194
  1960   0010BE                     u4195:
  1961   0010BE  90D8               	bcf	status,0,c
  1962   0010C0  3672               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1963   0010C2                     u4194:
  1964   0010C2  2E71               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1965   0010C4  EF5F  F008         	goto	u4195
  1966   0010C8  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1967   0010CA  6ED9               	movwf	fsr2l,c
  1968   0010CC  6ADA               	clrf	fsr2h,c
  1969   0010CE  50DF               	movf	223,w,c
  1970   0010D0  0B07               	andlw	7
  1971   0010D2  0D02               	mullw	2
  1972   0010D4  50F3               	movf	243,w,c
  1973   0010D6  0F57               	addlw	low _tris_registers
  1974   0010D8  6ED9               	movwf	fsr2l,c
  1975   0010DA  6ADA               	clrf	fsr2h,c
  1976   0010DC  CFDE F073          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1977   0010E0  CFDD F074          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1978   0010E4  C073  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1979   0010E8  C074  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1980   0010EC  5072               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1981   0010EE  12DF               	iorwf	indf2,f,c
  1982                           
  1983                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  1984   0010F0  EF9A  F008         	goto	l6034
  1985   0010F4                     l6032:
  1986   0010F4  5070               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1987   0010F6  6ED9               	movwf	fsr2l,c
  1988   0010F8  6ADA               	clrf	fsr2h,c
  1989   0010FA  BCDF               	btfsc	indf2,6,c
  1990   0010FC  EF82  F008         	goto	u4201
  1991   001100  EF85  F008         	goto	u4200
  1992   001104                     u4201:
  1993   001104  0E01               	movlw	1
  1994   001106  EF86  F008         	goto	u4210
  1995   00110A                     u4200:
  1996   00110A  0E00               	movlw	0
  1997   00110C                     u4210:
  1998   00110C  6E71               	movwf	??_gpio_pin_direction_intialize^0,c
  1999   00110E  6A72               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2000                           
  2001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2002                           ; Switch size 1, requested type "simple"
  2003                           ; Number of cases is 1, Range of values is 0 to 0
  2004                           ; switch strategies available:
  2005                           ; Name         Instructions Cycles
  2006                           ; simple_byte            4     3 (average)
  2007                           ;	Chosen strategy is simple_byte
  2008   001110  5072               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2009   001112  0A00               	xorlw	0	; case 0
  2010   001114  B4D8               	btfsc	status,2,c
  2011   001116  EF8F  F008         	goto	l6936
  2012   00111A  EF23  F008         	goto	l6024
  2013   00111E                     l6936:
  2014                           
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 2, Range of values is 0 to 1
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte            7     4 (average)
  2020                           ;	Chosen strategy is simple_byte
  2021   00111E  5071               	movf	??_gpio_pin_direction_intialize^0,w,c
  2022   001120  0A00               	xorlw	0	; case 0
  2023   001122  B4D8               	btfsc	status,2,c
  2024   001124  EF27  F008         	goto	l6026
  2025   001128  0A01               	xorlw	1	; case 1
  2026   00112A  B4D8               	btfsc	status,2,c
  2027   00112C  EF52  F008         	goto	l6028
  2028   001130  EF23  F008         	goto	l6024
  2029   001134                     l6034:
  2030                           
  2031                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  2032   001134  5076               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2033   001136  0012               	return		;funcret
  2034   001138                     __end_of_gpio_pin_direction_intialize:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _Interrupt_INTx_Enable *****************
  2038 ;; Defined at:
  2039 ;;		line 210 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  int_obj         1    2[COMRAM] PTR const struct .
  2042 ;;		 -> int0_obj(6), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  ret             1    5[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      unsigned char 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        4 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 2
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_Interrupt_INTx_Init
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text14
  2069   001364                     __ptext14:
  2070                           	callstack 0
  2071   001364                     _Interrupt_INTx_Enable:
  2072                           	callstack 27
  2073   001364                     
  2074                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 212:     if(((void*)0) == int_obj){
  2075   001364  5070               	movf	Interrupt_INTx_Enable@int_obj^0,w,c
  2076   001366  A4D8               	btfss	status,2,c
  2077   001368  EFB8  F009         	goto	u3451
  2078   00136C  EFBA  F009         	goto	u3450
  2079   001370                     u3451:
  2080   001370  EF08  F00A         	goto	l5314
  2081   001374                     u3450:
  2082   001374                     
  2083                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 213:         ret = (Std_ReturnType) 0x0
      +                          0;
  2084   001374  0E00               	movlw	0
  2085   001376  6E73               	movwf	Interrupt_INTx_Enable@ret^0,c
  2086                           
  2087                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 214:     }
  2088   001378  EF28  F00A         	goto	l858
  2089   00137C                     l860:
  2090                           
  2091                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 219:                 (INTCONbits.GIEH =
      +                           1);
  2092   00137C  8EF2               	bsf	242,7,c	;volatile
  2093                           
  2094                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 224:                 (INTCONbits.INT0IE
      +                           = 1);
  2095   00137E  88F2               	bsf	242,4,c	;volatile
  2096   001380                     l5290:
  2097                           
  2098                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 226:                 break;
  2099   001380  EF26  F00A         	goto	l5316
  2100   001384                     l862:
  2101                           
  2102                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 229:                 (RCONbits.IPEN = 1
      +                          );
  2103   001384  8ED0               	bsf	208,7,c	;volatile
  2104   001386                     
  2105                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 230:                 if(INTERRUPT_LOW_P
      +                          RIORITY == int_obj->priority){
  2106   001386  5070               	movf	Interrupt_INTx_Enable@int_obj^0,w,c
  2107   001388  6ED9               	movwf	fsr2l,c
  2108   00138A  6ADA               	clrf	fsr2h,c
  2109   00138C  0E05               	movlw	5
  2110   00138E  26D9               	addwf	fsr2l,f,c
  2111   001390  50DF               	movf	indf2,w,c
  2112   001392  A4D8               	btfss	status,2,c
  2113   001394  EFCE  F009         	goto	u3461
  2114   001398  EFD0  F009         	goto	u3460
  2115   00139C                     u3461:
  2116   00139C  EFD3  F009         	goto	l5296
  2117   0013A0                     u3460:
  2118   0013A0                     
  2119                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 231:                     (INTCONbits.GI
      +                          EL = 1);
  2120   0013A0  8CF2               	bsf	242,6,c	;volatile
  2121                           
  2122                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 232:                 }
  2123   0013A2  EFE1  F009         	goto	l864
  2124   0013A6                     l5296:
  2125   0013A6  5070               	movf	Interrupt_INTx_Enable@int_obj^0,w,c
  2126   0013A8  6ED9               	movwf	fsr2l,c
  2127   0013AA  6ADA               	clrf	fsr2h,c
  2128   0013AC  0E05               	movlw	5
  2129   0013AE  26D9               	addwf	fsr2l,f,c
  2130   0013B0  04DE               	decf	postinc2,w,c
  2131   0013B2  A4D8               	btfss	status,2,c
  2132   0013B4  EFDE  F009         	goto	u3471
  2133   0013B8  EFE0  F009         	goto	u3470
  2134   0013BC                     u3471:
  2135   0013BC  EFE1  F009         	goto	l864
  2136   0013C0                     u3470:
  2137   0013C0                     
  2138                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 234:                     (INTCONbits.GI
      +                          EH = 1);
  2139   0013C0  8EF2               	bsf	242,7,c	;volatile
  2140   0013C2                     l864:
  2141                           
  2142                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 241:                 (INTCON3bits.INT1I
      +                          E = 1);
  2143   0013C2  86F0               	bsf	240,3,c	;volatile
  2144   0013C4  EFC0  F009         	goto	l5290
  2145   0013C8                     l867:
  2146                           
  2147                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 246:                 (RCONbits.IPEN = 1
      +                          );
  2148   0013C8  8ED0               	bsf	208,7,c	;volatile
  2149   0013CA                     
  2150                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 247:                 if(INTERRUPT_LOW_P
      +                          RIORITY == int_obj->priority){
  2151   0013CA  5070               	movf	Interrupt_INTx_Enable@int_obj^0,w,c
  2152   0013CC  6ED9               	movwf	fsr2l,c
  2153   0013CE  6ADA               	clrf	fsr2h,c
  2154   0013D0  0E05               	movlw	5
  2155   0013D2  26D9               	addwf	fsr2l,f,c
  2156   0013D4  50DF               	movf	indf2,w,c
  2157   0013D6  A4D8               	btfss	status,2,c
  2158   0013D8  EFF0  F009         	goto	u3481
  2159   0013DC  EFF2  F009         	goto	u3480
  2160   0013E0                     u3481:
  2161   0013E0  EFF5  F009         	goto	l5306
  2162   0013E4                     u3480:
  2163   0013E4                     
  2164                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 248:                     (INTCONbits.GI
      +                          EL = 1);
  2165   0013E4  8CF2               	bsf	242,6,c	;volatile
  2166                           
  2167                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 249:                 }
  2168   0013E6  EF03  F00A         	goto	l869
  2169   0013EA                     l5306:
  2170   0013EA  5070               	movf	Interrupt_INTx_Enable@int_obj^0,w,c
  2171   0013EC  6ED9               	movwf	fsr2l,c
  2172   0013EE  6ADA               	clrf	fsr2h,c
  2173   0013F0  0E05               	movlw	5
  2174   0013F2  26D9               	addwf	fsr2l,f,c
  2175   0013F4  04DE               	decf	postinc2,w,c
  2176   0013F6  A4D8               	btfss	status,2,c
  2177   0013F8  EF00  F00A         	goto	u3491
  2178   0013FC  EF02  F00A         	goto	u3490
  2179   001400                     u3491:
  2180   001400  EF03  F00A         	goto	l869
  2181   001404                     u3490:
  2182   001404                     
  2183                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 251:                     (INTCONbits.GI
      +                          EH = 1);
  2184   001404  8EF2               	bsf	242,7,c	;volatile
  2185   001406                     l869:
  2186                           
  2187                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 258:                 (INTCON3bits.INT2I
      +                          E = 1);
  2188   001406  88F0               	bsf	240,4,c	;volatile
  2189   001408  EFC0  F009         	goto	l5290
  2190   00140C                     l5312:
  2191                           
  2192                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 262:         }
  2193   00140C  EF26  F00A         	goto	l5316
  2194   001410                     l5314:
  2195   001410  5070               	movf	Interrupt_INTx_Enable@int_obj^0,w,c
  2196   001412  6ED9               	movwf	fsr2l,c
  2197   001414  6ADA               	clrf	fsr2h,c
  2198   001416  0E04               	movlw	4
  2199   001418  26D9               	addwf	fsr2l,f,c
  2200   00141A  50DF               	movf	indf2,w,c
  2201   00141C  6E71               	movwf	??_Interrupt_INTx_Enable^0,c
  2202   00141E  6A72               	clrf	(??_Interrupt_INTx_Enable+1)^0,c
  2203                           
  2204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2205                           ; Switch size 1, requested type "simple"
  2206                           ; Number of cases is 1, Range of values is 0 to 0
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte            4     3 (average)
  2210                           ;	Chosen strategy is simple_byte
  2211   001420  5072               	movf	(??_Interrupt_INTx_Enable+1)^0,w,c
  2212   001422  0A00               	xorlw	0	; case 0
  2213   001424  B4D8               	btfsc	status,2,c
  2214   001426  EF17  F00A         	goto	l6938
  2215   00142A  EF06  F00A         	goto	l5312
  2216   00142E                     l6938:
  2217                           
  2218                           ; Switch size 1, requested type "simple"
  2219                           ; Number of cases is 3, Range of values is 0 to 2
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte           10     6 (average)
  2223                           ;	Chosen strategy is simple_byte
  2224   00142E  5071               	movf	??_Interrupt_INTx_Enable^0,w,c
  2225   001430  0A00               	xorlw	0	; case 0
  2226   001432  B4D8               	btfsc	status,2,c
  2227   001434  EFBE  F009         	goto	l860
  2228   001438  0A01               	xorlw	1	; case 1
  2229   00143A  B4D8               	btfsc	status,2,c
  2230   00143C  EFC2  F009         	goto	l862
  2231   001440  0A03               	xorlw	3	; case 2
  2232   001442  B4D8               	btfsc	status,2,c
  2233   001444  EFE4  F009         	goto	l867
  2234   001448  EF06  F00A         	goto	l5312
  2235   00144C                     l5316:
  2236                           
  2237                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 263:         ret = (Std_ReturnType) 0x0
      +                          1;
  2238   00144C  0E01               	movlw	1
  2239   00144E  6E73               	movwf	Interrupt_INTx_Enable@ret^0,c
  2240   001450                     l858:
  2241                           
  2242                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 265:     return ret;
  2243   001450  5073               	movf	Interrupt_INTx_Enable@ret^0,w,c
  2244   001452  0012               	return		;funcret
  2245   001454                     __end_of_Interrupt_INTx_Enable:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _Interrupt_INTx_Edge_Init *****************
  2249 ;; Defined at:
  2250 ;;		line 339 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  int_obj         1    2[COMRAM] PTR const struct .
  2253 ;;		 -> int0_obj(6), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  ret             1    5[COMRAM] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      unsigned char 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        4 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 2
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_Interrupt_INTx_Init
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text15
  2280   001138                     __ptext15:
  2281                           	callstack 0
  2282   001138                     _Interrupt_INTx_Edge_Init:
  2283                           	callstack 27
  2284   001138                     
  2285                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 341:     if(((void*)0) == int_obj){
  2286   001138  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2287   00113A  A4D8               	btfss	status,2,c
  2288   00113C  EFA2  F008         	goto	u3311
  2289   001140  EFA4  F008         	goto	u3310
  2290   001144                     u3311:
  2291   001144  EF0A  F009         	goto	l5208
  2292   001148                     u3310:
  2293   001148                     l5174:
  2294                           
  2295                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 342:         ret = (Std_ReturnType) 0x0
      +                          0;
  2296   001148  0E00               	movlw	0
  2297   00114A  6E73               	movwf	Interrupt_INTx_Edge_Init@ret^0,c
  2298                           
  2299                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 343:     }
  2300   00114C  EF28  F009         	goto	l5210
  2301   001150                     l5176:
  2302                           
  2303                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 347:                 if(INTERRUPT_FAILI
      +                          NG_EDGE == int_obj->edge){ (INTCON2bits.INTEDG0 = 0); }
  2304   001150  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2305   001152  6ED9               	movwf	fsr2l,c
  2306   001154  6ADA               	clrf	fsr2h,c
  2307   001156  0E03               	movlw	3
  2308   001158  26D9               	addwf	fsr2l,f,c
  2309   00115A  50DF               	movf	indf2,w,c
  2310   00115C  A4D8               	btfss	status,2,c
  2311   00115E  EFB3  F008         	goto	u3321
  2312   001162  EFB5  F008         	goto	u3320
  2313   001166                     u3321:
  2314   001166  EFB8  F008         	goto	l5180
  2315   00116A                     u3320:
  2316   00116A  9CF1               	bcf	241,6,c	;volatile
  2317   00116C  EFC6  F008         	goto	l5184
  2318   001170                     l5180:
  2319   001170  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2320   001172  6ED9               	movwf	fsr2l,c
  2321   001174  6ADA               	clrf	fsr2h,c
  2322   001176  0E03               	movlw	3
  2323   001178  26D9               	addwf	fsr2l,f,c
  2324   00117A  04DE               	decf	postinc2,w,c
  2325   00117C  A4D8               	btfss	status,2,c
  2326   00117E  EFC3  F008         	goto	u3331
  2327   001182  EFC5  F008         	goto	u3330
  2328   001186                     u3331:
  2329   001186  EFC6  F008         	goto	l5184
  2330   00118A                     u3330:
  2331   00118A  8CF1               	bsf	241,6,c	;volatile
  2332   00118C                     l5184:
  2333                           
  2334                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 350:                 ret = (Std_ReturnT
      +                          ype) 0x01;
  2335   00118C  0E01               	movlw	1
  2336   00118E  6E73               	movwf	Interrupt_INTx_Edge_Init@ret^0,c
  2337                           
  2338                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 351:                 break;
  2339   001190  EF28  F009         	goto	l5210
  2340   001194                     l5186:
  2341                           
  2342                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 353:                 if(INTERRUPT_FAILI
      +                          NG_EDGE == int_obj->edge){ (INTCON2bits.INTEDG1 = 0); }
  2343   001194  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2344   001196  6ED9               	movwf	fsr2l,c
  2345   001198  6ADA               	clrf	fsr2h,c
  2346   00119A  0E03               	movlw	3
  2347   00119C  26D9               	addwf	fsr2l,f,c
  2348   00119E  50DF               	movf	indf2,w,c
  2349   0011A0  A4D8               	btfss	status,2,c
  2350   0011A2  EFD5  F008         	goto	u3341
  2351   0011A6  EFD7  F008         	goto	u3340
  2352   0011AA                     u3341:
  2353   0011AA  EFDA  F008         	goto	l5190
  2354   0011AE                     u3340:
  2355   0011AE  9AF1               	bcf	241,5,c	;volatile
  2356   0011B0  EFC6  F008         	goto	l5184
  2357   0011B4                     l5190:
  2358   0011B4  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2359   0011B6  6ED9               	movwf	fsr2l,c
  2360   0011B8  6ADA               	clrf	fsr2h,c
  2361   0011BA  0E03               	movlw	3
  2362   0011BC  26D9               	addwf	fsr2l,f,c
  2363   0011BE  04DE               	decf	postinc2,w,c
  2364   0011C0  A4D8               	btfss	status,2,c
  2365   0011C2  EFE5  F008         	goto	u3351
  2366   0011C6  EFE7  F008         	goto	u3350
  2367   0011CA                     u3351:
  2368   0011CA  EFC6  F008         	goto	l5184
  2369   0011CE                     u3350:
  2370   0011CE  8AF1               	bsf	241,5,c	;volatile
  2371   0011D0  EFC6  F008         	goto	l5184
  2372   0011D4                     l5196:
  2373                           
  2374                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 359:                 if(INTERRUPT_FAILI
      +                          NG_EDGE == int_obj->edge){ (INTCON2bits.INTEDG2 = 0); }
  2375   0011D4  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2376   0011D6  6ED9               	movwf	fsr2l,c
  2377   0011D8  6ADA               	clrf	fsr2h,c
  2378   0011DA  0E03               	movlw	3
  2379   0011DC  26D9               	addwf	fsr2l,f,c
  2380   0011DE  50DF               	movf	indf2,w,c
  2381   0011E0  A4D8               	btfss	status,2,c
  2382   0011E2  EFF5  F008         	goto	u3361
  2383   0011E6  EFF7  F008         	goto	u3360
  2384   0011EA                     u3361:
  2385   0011EA  EFFA  F008         	goto	l5200
  2386   0011EE                     u3360:
  2387   0011EE  98F1               	bcf	241,4,c	;volatile
  2388   0011F0  EFC6  F008         	goto	l5184
  2389   0011F4                     l5200:
  2390   0011F4  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2391   0011F6  6ED9               	movwf	fsr2l,c
  2392   0011F8  6ADA               	clrf	fsr2h,c
  2393   0011FA  0E03               	movlw	3
  2394   0011FC  26D9               	addwf	fsr2l,f,c
  2395   0011FE  04DE               	decf	postinc2,w,c
  2396   001200  A4D8               	btfss	status,2,c
  2397   001202  EF05  F009         	goto	u3371
  2398   001206  EF07  F009         	goto	u3370
  2399   00120A                     u3371:
  2400   00120A  EFC6  F008         	goto	l5184
  2401   00120E                     u3370:
  2402   00120E  88F1               	bsf	241,4,c	;volatile
  2403   001210  EFC6  F008         	goto	l5184
  2404   001214                     l5208:
  2405   001214  5070               	movf	Interrupt_INTx_Edge_Init@int_obj^0,w,c
  2406   001216  6ED9               	movwf	fsr2l,c
  2407   001218  6ADA               	clrf	fsr2h,c
  2408   00121A  0E04               	movlw	4
  2409   00121C  26D9               	addwf	fsr2l,f,c
  2410   00121E  50DF               	movf	indf2,w,c
  2411   001220  6E71               	movwf	??_Interrupt_INTx_Edge_Init^0,c
  2412   001222  6A72               	clrf	(??_Interrupt_INTx_Edge_Init+1)^0,c
  2413                           
  2414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 1, Range of values is 0 to 0
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte            4     3 (average)
  2420                           ;	Chosen strategy is simple_byte
  2421   001224  5072               	movf	(??_Interrupt_INTx_Edge_Init+1)^0,w,c
  2422   001226  0A00               	xorlw	0	; case 0
  2423   001228  B4D8               	btfsc	status,2,c
  2424   00122A  EF19  F009         	goto	l6940
  2425   00122E  EFA4  F008         	goto	l5174
  2426   001232                     l6940:
  2427                           
  2428                           ; Switch size 1, requested type "simple"
  2429                           ; Number of cases is 3, Range of values is 0 to 2
  2430                           ; switch strategies available:
  2431                           ; Name         Instructions Cycles
  2432                           ; simple_byte           10     6 (average)
  2433                           ;	Chosen strategy is simple_byte
  2434   001232  5071               	movf	??_Interrupt_INTx_Edge_Init^0,w,c
  2435   001234  0A00               	xorlw	0	; case 0
  2436   001236  B4D8               	btfsc	status,2,c
  2437   001238  EFA8  F008         	goto	l5176
  2438   00123C  0A01               	xorlw	1	; case 1
  2439   00123E  B4D8               	btfsc	status,2,c
  2440   001240  EFCA  F008         	goto	l5186
  2441   001244  0A03               	xorlw	3	; case 2
  2442   001246  B4D8               	btfsc	status,2,c
  2443   001248  EFEA  F008         	goto	l5196
  2444   00124C  EFA4  F008         	goto	l5174
  2445   001250                     l5210:
  2446                           
  2447                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 367:     return ret;
  2448   001250  5073               	movf	Interrupt_INTx_Edge_Init@ret^0,w,c
  2449   001252  0012               	return		;funcret
  2450   001254                     __end_of_Interrupt_INTx_Edge_Init:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _Interrupt_INTx_Disable *****************
  2454 ;; Defined at:
  2455 ;;		line 273 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  int_obj         1    2[COMRAM] PTR const struct .
  2458 ;;		 -> int0_obj(6), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  ret             1    5[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      unsigned char 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        4 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 2
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_Interrupt_INTx_Init
  2481 ;;		_Interrupt_INTx_DeInit
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text16
  2486   001640                     __ptext16:
  2487                           	callstack 0
  2488   001640                     _Interrupt_INTx_Disable:
  2489                           	callstack 27
  2490   001640                     
  2491                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 275:     if(((void*)0) == int_obj){
  2492   001640  5070               	movf	Interrupt_INTx_Disable@int_obj^0,w,c
  2493   001642  A4D8               	btfss	status,2,c
  2494   001644  EF26  F00B         	goto	u3291
  2495   001648  EF28  F00B         	goto	u3290
  2496   00164C                     u3291:
  2497   00164C  EF37  F00B         	goto	l5140
  2498   001650                     u3290:
  2499   001650                     
  2500                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 276:         ret = (Std_ReturnType) 0x0
      +                          0;
  2501   001650  0E00               	movlw	0
  2502   001652  6E73               	movwf	Interrupt_INTx_Disable@ret^0,c
  2503                           
  2504                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 277:     }
  2505   001654  EF57  F00B         	goto	l877
  2506   001658                     l879:
  2507                           
  2508                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 281:                 (INTCONbits.INT0IE
      +                           = 0);
  2509   001658  98F2               	bcf	242,4,c	;volatile
  2510   00165A                     l5132:
  2511                           
  2512                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 283:                 break;
  2513   00165A  EF55  F00B         	goto	l5142
  2514   00165E                     l881:
  2515                           
  2516                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 285:                 (INTCON3bits.INT1I
      +                          E = 0);
  2517   00165E  96F0               	bcf	240,3,c	;volatile
  2518   001660  EF2D  F00B         	goto	l5132
  2519   001664                     l882:
  2520                           
  2521                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 289:                 (INTCON3bits.INT2I
      +                          E = 0);
  2522   001664  98F0               	bcf	240,4,c	;volatile
  2523   001666  EF2D  F00B         	goto	l5132
  2524   00166A                     l5138:
  2525                           
  2526                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 293:         }
  2527   00166A  EF55  F00B         	goto	l5142
  2528   00166E                     l5140:
  2529   00166E  5070               	movf	Interrupt_INTx_Disable@int_obj^0,w,c
  2530   001670  6ED9               	movwf	fsr2l,c
  2531   001672  6ADA               	clrf	fsr2h,c
  2532   001674  0E04               	movlw	4
  2533   001676  26D9               	addwf	fsr2l,f,c
  2534   001678  50DF               	movf	indf2,w,c
  2535   00167A  6E71               	movwf	??_Interrupt_INTx_Disable^0,c
  2536   00167C  6A72               	clrf	(??_Interrupt_INTx_Disable+1)^0,c
  2537                           
  2538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2539                           ; Switch size 1, requested type "simple"
  2540                           ; Number of cases is 1, Range of values is 0 to 0
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte            4     3 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545   00167E  5072               	movf	(??_Interrupt_INTx_Disable+1)^0,w,c
  2546   001680  0A00               	xorlw	0	; case 0
  2547   001682  B4D8               	btfsc	status,2,c
  2548   001684  EF46  F00B         	goto	l6942
  2549   001688  EF35  F00B         	goto	l5138
  2550   00168C                     l6942:
  2551                           
  2552                           ; Switch size 1, requested type "simple"
  2553                           ; Number of cases is 3, Range of values is 0 to 2
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte           10     6 (average)
  2557                           ;	Chosen strategy is simple_byte
  2558   00168C  5071               	movf	??_Interrupt_INTx_Disable^0,w,c
  2559   00168E  0A00               	xorlw	0	; case 0
  2560   001690  B4D8               	btfsc	status,2,c
  2561   001692  EF2C  F00B         	goto	l879
  2562   001696  0A01               	xorlw	1	; case 1
  2563   001698  B4D8               	btfsc	status,2,c
  2564   00169A  EF2F  F00B         	goto	l881
  2565   00169E  0A03               	xorlw	3	; case 2
  2566   0016A0  B4D8               	btfsc	status,2,c
  2567   0016A2  EF32  F00B         	goto	l882
  2568   0016A6  EF35  F00B         	goto	l5138
  2569   0016AA                     l5142:
  2570                           
  2571                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 294:         ret = (Std_ReturnType) 0x0
      +                          1;
  2572   0016AA  0E01               	movlw	1
  2573   0016AC  6E73               	movwf	Interrupt_INTx_Disable@ret^0,c
  2574   0016AE                     l877:
  2575                           
  2576                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 296:     return ret;
  2577   0016AE  5073               	movf	Interrupt_INTx_Disable@ret^0,w,c
  2578   0016B0  0012               	return		;funcret
  2579   0016B2                     __end_of_Interrupt_INTx_Disable:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _Interrupt_INTx_Clear_Flag *****************
  2583 ;; Defined at:
  2584 ;;		line 387 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  int_obj         1    2[COMRAM] PTR const struct .
  2587 ;;		 -> int0_obj(6), 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  ret             1    5[COMRAM] unsigned char 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      unsigned char 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2599 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;Total ram usage:        4 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; Hardware stack levels required when called: 2
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_Interrupt_INTx_Init
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text17
  2614   0016B2                     __ptext17:
  2615                           	callstack 0
  2616   0016B2                     _Interrupt_INTx_Clear_Flag:
  2617                           	callstack 27
  2618   0016B2                     
  2619                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 389:     if(((void*)0) == int_obj){
  2620   0016B2  5070               	movf	Interrupt_INTx_Clear_Flag@int_obj^0,w,c
  2621   0016B4  A4D8               	btfss	status,2,c
  2622   0016B6  EF5F  F00B         	goto	u3301
  2623   0016BA  EF61  F00B         	goto	u3300
  2624   0016BE                     u3301:
  2625   0016BE  EF70  F00B         	goto	l5162
  2626   0016C2                     u3300:
  2627   0016C2                     
  2628                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 390:         ret = (Std_ReturnType) 0x0
      +                          0;
  2629   0016C2  0E00               	movlw	0
  2630   0016C4  6E73               	movwf	Interrupt_INTx_Clear_Flag@ret^0,c
  2631                           
  2632                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 391:     }
  2633   0016C6  EF90  F00B         	goto	l934
  2634   0016CA                     l936:
  2635                           
  2636                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 395:                 (INTCONbits.INT0IF
      +                           = 0);
  2637   0016CA  92F2               	bcf	242,1,c	;volatile
  2638   0016CC                     l5154:
  2639                           
  2640                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 397:                 break;
  2641   0016CC  EF8E  F00B         	goto	l5164
  2642   0016D0                     l938:
  2643                           
  2644                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 399:                  (INTCON3bits.INT1
      +                          IF = 0);
  2645   0016D0  90F0               	bcf	240,0,c	;volatile
  2646   0016D2  EF66  F00B         	goto	l5154
  2647   0016D6                     l939:
  2648                           
  2649                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 403:                 (INTCON3bits.INT2I
      +                          F = 0);
  2650   0016D6  92F0               	bcf	240,1,c	;volatile
  2651   0016D8  EF66  F00B         	goto	l5154
  2652   0016DC                     l5160:
  2653                           
  2654                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 407:         }
  2655   0016DC  EF8E  F00B         	goto	l5164
  2656   0016E0                     l5162:
  2657   0016E0  5070               	movf	Interrupt_INTx_Clear_Flag@int_obj^0,w,c
  2658   0016E2  6ED9               	movwf	fsr2l,c
  2659   0016E4  6ADA               	clrf	fsr2h,c
  2660   0016E6  0E04               	movlw	4
  2661   0016E8  26D9               	addwf	fsr2l,f,c
  2662   0016EA  50DF               	movf	indf2,w,c
  2663   0016EC  6E71               	movwf	??_Interrupt_INTx_Clear_Flag^0,c
  2664   0016EE  6A72               	clrf	(??_Interrupt_INTx_Clear_Flag+1)^0,c
  2665                           
  2666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 1, Range of values is 0 to 0
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte            4     3 (average)
  2672                           ;	Chosen strategy is simple_byte
  2673   0016F0  5072               	movf	(??_Interrupt_INTx_Clear_Flag+1)^0,w,c
  2674   0016F2  0A00               	xorlw	0	; case 0
  2675   0016F4  B4D8               	btfsc	status,2,c
  2676   0016F6  EF7F  F00B         	goto	l6944
  2677   0016FA  EF6E  F00B         	goto	l5160
  2678   0016FE                     l6944:
  2679                           
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 3, Range of values is 0 to 2
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte           10     6 (average)
  2685                           ;	Chosen strategy is simple_byte
  2686   0016FE  5071               	movf	??_Interrupt_INTx_Clear_Flag^0,w,c
  2687   001700  0A00               	xorlw	0	; case 0
  2688   001702  B4D8               	btfsc	status,2,c
  2689   001704  EF65  F00B         	goto	l936
  2690   001708  0A01               	xorlw	1	; case 1
  2691   00170A  B4D8               	btfsc	status,2,c
  2692   00170C  EF68  F00B         	goto	l938
  2693   001710  0A03               	xorlw	3	; case 2
  2694   001712  B4D8               	btfsc	status,2,c
  2695   001714  EF6B  F00B         	goto	l939
  2696   001718  EF6E  F00B         	goto	l5160
  2697   00171C                     l5164:
  2698                           
  2699                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 408:         ret = (Std_ReturnType) 0x0
      +                          1;
  2700   00171C  0E01               	movlw	1
  2701   00171E  6E73               	movwf	Interrupt_INTx_Clear_Flag@ret^0,c
  2702   001720                     l934:
  2703                           
  2704                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 410:     return ret;
  2705   001720  5073               	movf	Interrupt_INTx_Clear_Flag@ret^0,w,c
  2706   001722  0012               	return		;funcret
  2707   001724                     __end_of_Interrupt_INTx_Clear_Flag:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _InterruptMangerLow *****************
  2711 ;; Defined at:
  2712 ;;		line 31 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:        2 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		Interrupt level 1
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	intcodelo
  2741   000018                     __pintcodelo:
  2742                           	callstack 0
  2743   000018                     _InterruptMangerLow:
  2744                           	callstack 26
  2745                           
  2746                           ;incstack = 0
  2747   000018  807D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2748   00001A  CFE8 F06E          	movff	wreg,??_InterruptMangerLow
  2749   00001E  CFE0 F06F          	movff	bsr,??_InterruptMangerLow+1
  2750   000022                     
  2751                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:     if( ( 1 == INTCON3bits.INT1E ) &
      +                          & ( 1 == INTCON3bits.INT1F ) ){
  2752   000022  A6F0               	btfss	240,3,c	;volatile
  2753   000024  EF16  F000         	goto	i1u203_21
  2754   000028  EF18  F000         	goto	i1u203_20
  2755   00002C                     i1u203_21:
  2756   00002C  EF19  F000         	goto	i1l1077
  2757   000030                     i1u203_20:
  2758   000030  50F0               	movf	240,w,c	;volatile
  2759   000032                     i1l1077:
  2760   000032  C06F  FFE0         	movff	??_InterruptMangerLow+1,bsr
  2761   000036  C06E  FFE8         	movff	??_InterruptMangerLow,wreg
  2762   00003A  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2763   00003C  0010               	retfie	
  2764   00003E                     __end_of_InterruptMangerLow:
  2765                           	callstack 0
  2766                           
  2767 ;; *************** function _InterruptMangerHigh *****************
  2768 ;; Defined at:
  2769 ;;		line 13 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		Interrupt level 2
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	intcode
  2797   000008                     __pintcode:
  2798                           	callstack 0
  2799   000008                     _InterruptMangerHigh:
  2800                           	callstack 26
  2801                           
  2802                           ;incstack = 0
  2803   000008  827D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2804   00000A  ED76  F00C         	call	int_func,f	;refresh shadow registers
  2805                           
  2806                           	psect	intcode_body
  2807   0018EC                     __pintcode_body:
  2808                           	callstack 26
  2809   0018EC                     int_func:
  2810                           	callstack 26
  2811   0018EC  0006               	pop		; remove dummy address from shadow register refresh
  2812   0018EE                     
  2813                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 14:     if( ( 1 == INTCONbits.INT0IE ) &
      +                          & ( 1 == INTCONbits.INT0IF ) ){
  2814   0018EE  A8F2               	btfss	242,4,c	;volatile
  2815   0018F0  EF7C  F00C         	goto	i2u201_41
  2816   0018F4  EF7E  F00C         	goto	i2u201_40
  2817   0018F8                     i2u201_41:
  2818   0018F8  EF7F  F00C         	goto	i2l1067
  2819   0018FC                     i2u201_40:
  2820   0018FC  50F2               	movf	242,w,c	;volatile
  2821   0018FE                     i2l1067:
  2822                           
  2823                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 22:     if( ( 1 == INTCON3bits.INT2IE ) 
      +                          && ( 1 == INTCON3bits.INT2IF ) ){
  2824   0018FE  A8F0               	btfss	240,4,c	;volatile
  2825   001900  EF84  F00C         	goto	i2u202_41
  2826   001904  EF86  F00C         	goto	i2u202_40
  2827   001908                     i2u202_41:
  2828   001908  EF87  F00C         	goto	i2l1070
  2829   00190C                     i2u202_40:
  2830   00190C  50F0               	movf	240,w,c	;volatile
  2831   00190E                     i2l1070:
  2832   00190E  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2833   001910  0011               	retfie		f
  2834   001912                     __end_of_InterruptMangerHigh:
  2835                           	callstack 0
  2836                           
  2837                           	psect	rparam
  2838   000000                     
  2839                           	psect	temp
  2840   00007D                     btemp:
  2841                           	callstack 0
  2842   00007D                     	ds	1
  2843   000000                     int$flags	set	btemp
  2844   000000                     wtemp8	set	btemp+1
  2845   000000                     ttemp5	set	btemp+1
  2846   000000                     ttemp6	set	btemp+4
  2847   000000                     ttemp7	set	btemp+8
  2848                           
  2849                           	psect	config
  2850                           
  2851                           ; Padding undefined space
  2852   300000                     	org	3145728
  2853   300000  FF                 	db	255
  2854                           
  2855                           ;Config register CONFIG1H @ 0x300001
  2856                           ;	Oscillator Selection bits
  2857                           ;	OSC = HS, HS oscillator
  2858                           ;	Fail-Safe Clock Monitor Enable bit
  2859                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2860                           ;	Internal/External Oscillator Switchover bit
  2861                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2862   300001                     	org	3145729
  2863   300001  02                 	db	2
  2864                           
  2865                           ;Config register CONFIG2L @ 0x300002
  2866                           ;	Power-up Timer Enable bit
  2867                           ;	PWRT = OFF, PWRT disabled
  2868                           ;	Brown-out Reset Enable bits
  2869                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2870                           ;	Brown Out Reset Voltage bits
  2871                           ;	BORV = 3, Minimum setting
  2872   300002                     	org	3145730
  2873   300002  1F                 	db	31
  2874                           
  2875                           ;Config register CONFIG2H @ 0x300003
  2876                           ;	Watchdog Timer Enable bit
  2877                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2878                           ;	Watchdog Timer Postscale Select bits
  2879                           ;	WDTPS = 32768, 1:32768
  2880   300003                     	org	3145731
  2881   300003  1E                 	db	30
  2882                           
  2883                           ; Padding undefined space
  2884   300004                     	org	3145732
  2885   300004  FF                 	db	255
  2886                           
  2887                           ;Config register CONFIG3H @ 0x300005
  2888                           ;	CCP2 MUX bit
  2889                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2890                           ;	PORTB A/D Enable bit
  2891                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2892                           ;	Low-Power Timer1 Oscillator Enable bit
  2893                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2894                           ;	MCLR Pin Enable bit
  2895                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2896   300005                     	org	3145733
  2897   300005  81                 	db	129
  2898                           
  2899                           ;Config register CONFIG4L @ 0x300006
  2900                           ;	Stack Full/Underflow Reset Enable bit
  2901                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2902                           ;	Single-Supply ICSP Enable bit
  2903                           ;	LVP = OFF, Single-Supply ICSP disabled
  2904                           ;	Extended Instruction Set Enable bit
  2905                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2906                           ;	Background Debugger Enable bit
  2907                           ;	DEBUG = 0x1, unprogrammed default
  2908   300006                     	org	3145734
  2909   300006  81                 	db	129
  2910                           
  2911                           ; Padding undefined space
  2912   300007                     	org	3145735
  2913   300007  FF                 	db	255
  2914                           
  2915                           ;Config register CONFIG5L @ 0x300008
  2916                           ;	Code Protection bit
  2917                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2918                           ;	Code Protection bit
  2919                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2920                           ;	Code Protection bit
  2921                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2922                           ;	Code Protection bit
  2923                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2924   300008                     	org	3145736
  2925   300008  0F                 	db	15
  2926                           
  2927                           ;Config register CONFIG5H @ 0x300009
  2928                           ;	Boot Block Code Protection bit
  2929                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2930                           ;	Data EEPROM Code Protection bit
  2931                           ;	CPD = OFF, Data EEPROM not code-protected
  2932   300009                     	org	3145737
  2933   300009  C0                 	db	192
  2934                           
  2935                           ;Config register CONFIG6L @ 0x30000A
  2936                           ;	Write Protection bit
  2937                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2938                           ;	Write Protection bit
  2939                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2940                           ;	Write Protection bit
  2941                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2942                           ;	Write Protection bit
  2943                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2944   30000A                     	org	3145738
  2945   30000A  0F                 	db	15
  2946                           
  2947                           ;Config register CONFIG6H @ 0x30000B
  2948                           ;	Configuration Register Write Protection bit
  2949                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2950                           ;	Boot Block Write Protection bit
  2951                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2952                           ;	Data EEPROM Write Protection bit
  2953                           ;	WRTD = OFF, Data EEPROM not write-protected
  2954   30000B                     	org	3145739
  2955   30000B  E0                 	db	224
  2956                           
  2957                           ;Config register CONFIG7L @ 0x30000C
  2958                           ;	Table Read Protection bit
  2959                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2960                           ;	Table Read Protection bit
  2961                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2962                           ;	Table Read Protection bit
  2963                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2964                           ;	Table Read Protection bit
  2965                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2966   30000C                     	org	3145740
  2967   30000C  0F                 	db	15
  2968                           
  2969                           ;Config register CONFIG7H @ 0x30000D
  2970                           ;	Boot Block Table Read Protection bit
  2971                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2972   30000D                     	org	3145741
  2973   30000D  40                 	db	64
  2974                           tosu	equ	0xFFF
  2975                           tosh	equ	0xFFE
  2976                           tosl	equ	0xFFD
  2977                           stkptr	equ	0xFFC
  2978                           pclatu	equ	0xFFB
  2979                           pclath	equ	0xFFA
  2980                           pcl	equ	0xFF9
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           indf0	equ	0xFEF
  2988                           postinc0	equ	0xFEE
  2989                           postdec0	equ	0xFED
  2990                           preinc0	equ	0xFEC
  2991                           plusw0	equ	0xFEB
  2992                           fsr0h	equ	0xFEA
  2993                           fsr0l	equ	0xFE9
  2994                           wreg	equ	0xFE8
  2995                           indf1	equ	0xFE7
  2996                           postinc1	equ	0xFE6
  2997                           postdec1	equ	0xFE5
  2998                           preinc1	equ	0xFE4
  2999                           plusw1	equ	0xFE3
  3000                           fsr1h	equ	0xFE2
  3001                           fsr1l	equ	0xFE1
  3002                           bsr	equ	0xFE0
  3003                           indf2	equ	0xFDF
  3004                           postinc2	equ	0xFDE
  3005                           postdec2	equ	0xFDD
  3006                           preinc2	equ	0xFDC
  3007                           plusw2	equ	0xFDB
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        43
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15     124
    BANK0           128      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Capture_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), led_initialize@pin_obj(BANK0[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_initialize@pin_obj(BANK0[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 4
		 -> lcd_4bit_send_char_data@lcd(COMRAM[2]), lcd_4bit_send_command@lcd(COMRAM[2]), lcd_4bit_send_command@lcd$lcd_data(COMRAM[4]), led_initialize@pin_obj(BANK0[1]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), NULL(), 

    int0_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_Clear_Flag@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_Disable@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_Edge_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_Enable@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Int0_ISR(), 

    Interrupt_INTx_Pin_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_Priority_Init@int_obj	PTR const struct . size(1) Largest target is 1
		 -> Interrupt_INTx_Init@int_obj(COMRAM[1]), 

    Interrupt_INTx_Priority_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_INTx_SetInterruptHandler@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), 

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    led_initialize@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1147$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1147$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1944$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Int0_ISR(), 

    S1987$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1987$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2478$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2701$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2930$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3079$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3290$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3290$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3290$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3290$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3879$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3879$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S3879$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S4820$buffer	PTR unsigned char  size(2) Largest target is 0

    S4820$source	PTR const unsigned char  size(2) Largest target is 0

    S696$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_led_initialize
    _led_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _Interrupt_INTx_Init->_Interrupt_INTx_Pin_Init
    _Interrupt_INTx_SetInterruptHandler->_INT0_SetInterruptHandler
    _Interrupt_INTx_SetInterruptHandler->_INT1_SetInterruptHandler
    _Interrupt_INTx_SetInterruptHandler->_INT2_SetInterruptHandler
    _Interrupt_INTx_Pin_Init->_gpio_pin_direction_intialize

Critical Paths under _InterruptMangerLow in COMRAM

    None.

Critical Paths under _InterruptMangerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_led_initialize

Critical Paths under _InterruptMangerLow in BANK0

    None.

Critical Paths under _InterruptMangerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptMangerLow in BANK1

    None.

Critical Paths under _InterruptMangerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptMangerLow in BANK2

    None.

Critical Paths under _InterruptMangerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptMangerLow in BANK3

    None.

Critical Paths under _InterruptMangerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptMangerLow in BANK4

    None.

Critical Paths under _InterruptMangerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptMangerLow in BANK5

    None.

Critical Paths under _InterruptMangerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptMangerLow in BANK6

    None.

Critical Paths under _InterruptMangerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptMangerLow in BANK7

    None.

Critical Paths under _InterruptMangerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptMangerLow in BANK8

    None.

Critical Paths under _InterruptMangerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptMangerLow in BANK9

    None.

Critical Paths under _InterruptMangerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptMangerLow in BANK10

    None.

Critical Paths under _InterruptMangerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptMangerLow in BANK11

    None.

Critical Paths under _InterruptMangerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptMangerLow in BANK12

    None.

Critical Paths under _InterruptMangerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptMangerLow in BANK13

    None.

Critical Paths under _InterruptMangerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptMangerLow in BANK14

    None.

Critical Paths under _InterruptMangerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptMangerLow in BANK15

    None.

Critical Paths under _InterruptMangerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11613
                _Interrupt_INTx_Init
              _application_intialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (1) _led_initialize                                       4     3      1    8518
                                             13 COMRAM     2     1      1
                                              0 BANK0      2     2      0
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   3     2      1    8182
                                             10 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    5837
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       0
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_INTx_Init                                  2     1      1    3086
                                             11 COMRAM     2     1      1
          _Interrupt_INTx_Clear_Flag
             _Interrupt_INTx_Disable
           _Interrupt_INTx_Edge_Init
              _Interrupt_INTx_Enable
            _Interrupt_INTx_Pin_Init
       _Interrupt_INTx_Priority_Init
 _Interrupt_INTx_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_SetInterruptHandler                   4     3      1     650
                                              5 COMRAM     4     3      1
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     1      2     145
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     1      2     145
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     1      2     145
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Priority_Init                         4     3      1     235
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Pin_Init                              2     1      1     899
                                              9 COMRAM     2     1      1
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         7     6      1     707
                                              2 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Enable                                4     3      1     237
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Edge_Init                             4     3      1     280
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Disable                               4     3      1     225
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Clear_Flag                            4     3      1     149
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptMangerLow                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptMangerHigh                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_INTx_Init
     _Interrupt_INTx_Clear_Flag
     _Interrupt_INTx_Disable
     _Interrupt_INTx_Edge_Init
     _Interrupt_INTx_Enable
     _Interrupt_INTx_Pin_Init
       _gpio_pin_direction_intialize
     _Interrupt_INTx_Priority_Init
     _Interrupt_INTx_SetInterruptHandler
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
   _application_intialize
     _ecu_layer_intialize
   _led_initialize
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic

 _InterruptMangerLow (ROOT)

 _InterruptMangerHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2       2       5        1.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      7C       1       98.4%
BITBIGSFRhlhhhh     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRhlhhhl      4      0       0      38        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRllhlll      3      0       0      43        0.0%
BITBIGSFRllhllh      1      0       0      41        0.0%
BITBIGSFRllhlh       1      0       0      40        0.0%
BITBIGSFRllhh        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7E      47        0.0%
DATA                 0      0      7E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri May 17 20:13:25 2024

                       ??_InterruptMangerLow 006E                                  _SSPSTATbits 0FC7  
                                         bsr 0FE0                        ??_InterruptMangerHigh 006E  
                                        l244 15E8                                          l327 1934  
                                        l248 163E                                          l710 1136  
                                        l902 1526                                          l750 17E2  
                                        l729 1362                                          l930 18EA  
                                        l860 137C                                          l828 1784  
                                        l941 1722                                          l925 1252  
                                        l934 1720                                          l862 1384  
                                        l936 16CA                                          l864 13C2  
                                        l881 165E                                          l873 1452  
                                        l938 16D0                                          l882 1664  
                                        l858 1450                                          l939 16D6  
                                        l867 13C8                                          l971 1898  
                                        l884 16B0                                          l980 15C6  
                                        l877 16AE                                          l869 1406  
                                        l966 18C2                                          l879 1658  
                                        l976 186E                                          l987 15C8  
                                        _PR2 0FCB                   ??_INT0_SetInterruptHandler 0072  
                  _RB5_InterruptHandler_HIGH 0027                          led_initialize@F3058 0040  
                      relay_initialize@F3052 003C                                          wreg 0FE8  
                                       l5000 189A                                         l5010 18C0  
                                       l5002 189A                                         l5004 18AC  
                                       l5020 188A                                         l1493 1926  
                                       l5006 18B4                                         l5022 1892  
                                       l5014 1870                                         l5030 1846  
                                       l1494 1926                                         l5200 11F4  
                                       l5008 18BC                                         l5024 1896  
                                       l5016 1870                                         l5032 1858  
                                       l6000 1268                                         l5130 1650  
                                       l5202 120E                                         l5210 1250  
                                       l5018 1882                                         l5034 1860  
                                       l6010 1336                                         l6002 1288  
                                       l1499 1932                                         l5132 165A  
                                       l5140 166E                                         l6020 1012  
                                       l5220 1464                                         l5036 1868  
                                       l5028 1846                                         l2556 1934  
                                       l6004 1290                                         l6012 1360  
                                       l5150 16B2                                         l5142 16AA  
                                       l5302 13CA                                         l6022 1026  
                                       l5230 14A8                                         l5222 146C  
                                       l5038 186C                                         l6006 12E6  
                                       l5160 16DC                                         l5152 16C2  
                                       l5128 1640                                         l5208 1214  
                                       l5312 140C                                         l5304 13E4  
                                       l6032 10F4                                         l6024 1046  
                                       l5232 14B0                                         l5224 1486  
                                       l6200 15CA                                         l5154 16CC  
                                       l5162 16E0                                         l5138 166A  
                                       l5306 13EA                                         l5314 1410  
                                       l6026 104E                                         l6034 1134  
                                       l6130 18D4                                         l5234 14CA  
                                       l5226 148C                                         l5218 1454  
                                       l6050 17E0                                         l6042 1786  
                                       l6210 1632                                         l6202 15E0  
                                       l5164 171C                                         l5180 1170  
                                       l5172 1138                                         l5308 1404  
                                       l5316 144C                                         l6028 10A4  
                                       l6132 18DC                                         l5236 14D0  
                                       l5228 14A6                                         l5244 14F0  
                                       l6220 173C                                         l6044 1796  
                                       l6204 15EC                                         l6212 163A  
                                       l5190 11B4                                         l5182 118A  
                                       l5174 1148                                         l6134 18E8  
                                       l5238 14EA                                         l5246 1524  
                                       l5270 1556                                         l6222 1764  
                                       l6046 17B6                                         l6206 161E  
                                       l5192 11CE                                         l5184 118C  
                                       l5176 1150                                         l6128 18C4  
                                       l5272 156C                                         l5264 1528  
                                       l6224 176E                                         l6216 1724  
                                       l2952 192E                                         l6048 17BE  
                                       l6208 1620                                         l5186 1194  
                                       l5178 116A                                         l5290 1380  
                                       l5274 1582                                         l5266 1538  
                                       l6226 1778                                         l6218 1734  
                                       l2954 192E                                         l5196 11D4  
                                       l5188 11AE                                         l5292 1386  
                                       l5268 1540                                         l5276 1586  
                                       l6228 1782                                         l5198 11EE  
                                       l5294 13A0                                         l5286 1364  
                                       l5278 15C2                                         l5296 13A6  
                                       l5288 1374                                         l5298 13C0  
                                       l6930 134A                                         l6762 1912  
                                       l6940 1232                                         l6932 15A4  
                                       l6764 1912                                         l6942 168C  
                                       l6934 150E                                         l6766 1916  
                                       l6944 16FE                                         l6936 111E  
                                       l6768 191E                                         l6938 142E  
                                       l5998 1254                                         _LATA 0F89  
                                       _LATB 0F8A                                         _LATC 0F8B  
                                       u3200 18AC                                         _LATD 0F8C  
                                       u3201 18A8                                         _LATE 0F8D  
                                       u3210 1882                                         u3211 187E  
                                       u3300 16C2                                         u3220 1858  
                                       u3301 16BE                                         u3221 1854  
                                       u3310 1148                                         u3311 1144  
                                       u3320 116A                                         u4200 110A  
                                       u3400 14A6                                         u4120 1268  
                                       u3321 1166                                         u4201 1104  
                                       u3401 14A2                                         u4121 1264  
                                       u3330 118A                                         u4210 110C  
                                       u3410 14CA                                         u4130 1288  
                                       u3331 1186                                         u3411 14C6  
                                       u4131 1284                                         u3340 11AE  
                                       u3420 14EA                                         u4220 1796  
                                       u3341 11AA                                         u3421 14E6  
                                       u4221 1792                                         u3350 11CE  
                                       u4230 17B6                                         u3351 11CA  
                                       u4231 17B2                                         u3360 11EE  
                                       u4160 1026                                         u3440 1538  
                                       u4144 12AE                                         u3361 11EA  
                                       u4161 1022                                         u3441 1534  
                                       u4145 12AA                                         u3290 1650  
                                       u3370 120E                                         u3450 1374  
                                       u4170 1046                                         u4154 1304  
                                       u3291 164C                                         u3371 120A  
                                       u3451 1370                                         u4171 1042  
                                       u4155 1300                                         u3460 13A0  
                                       u3380 1464                                         u3461 139C  
                                       u3381 1460                                         u3470 13C0  
                                       u3390 1486                                         u4350 15E0  
                                       u3471 13BC                                         u3391 1482  
                                       u4351 15DC                                         u3480 13E4  
                                       u4184 106C                                         u4280 18D4  
                                       u3481 13E0                                         u4185 1068  
                                       u4281 18D0                                         u3490 1404  
                                       u4194 10C2                                         u4370 1734  
                                       u3491 1400                                         u4195 10BE  
                                       u4371 1730                                         u4365 162E  
                                       u4367 1632                                         _TMR2 0FCC  
                    ??_application_intialize 0070                     _RB4_InterruptHandler_LOW 0029  
                                       _led1 006D                                         _led2 0066  
                                       _led3 0065                                         _main 1912  
                   _RB7_InterruptHandler_LOW 001D                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 007D  
                     __end_of_led_initialize 1640                    ?_INT2_SetInterruptHandler 0070  
                                       prodl 0FF3                                         start 003E  
                               ___param_bank 0000                         _gpio_pin_write_logic 1254  
                  ?_Interrupt_INTx_Edge_Init 0070                                        ?_main 006E  
                                      _EEADR 0FA9                                        _RCREG 0FAE  
                        relay_turn_off@F3062 003A                                        _TMR0H 0FD7  
                                      _TMR1H 0FCF                                        _TMR0L 0FD6  
                                      _TMR1L 0FCE                                        _TMR3H 0FB3  
                                      _TMR3L 0FB2                                        _SPBRG 0FAF  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
                                      _TXREG 0FAD                     Interrupt_INTx_Enable@ret 0073  
                   _INT1_SetInterruptHandler 1870                                        tablat 0FF5  
                                      ttemp5 007E                                        ttemp6 0081  
                                      ttemp7 0085                                        status 0FD8  
                                      wtemp8 007E                              ?_led_initialize 007B  
                     _Interrupt_INTx_Disable 1640    Interrupt_INTx_SetInterruptHandler@int_obj 0073  
                            __initialization 17E4                                 __end_of_main 192E  
                      ?_gpio_pin_write_logic 0070                                _lat_registers 004D  
                INT1_SetInterruptHandler@ret 0072                                       ??_main 007D  
                              __activetblptr 0003                        _TMR3_InterruptHandler 0011  
                           led_turn_on@F3063 003F                   _EUSART_OverrunErrorHandler 0007  
                                     _ADRESH 0FC4                                       _EEADRH 0FAA  
                                     _ADRESL 0FC3                                       _EEDATA 0FA8  
                                     _CCPR1L 0FBE                                       _CCPR2L 0FBB  
                                     _EECON2 0FA7                                       i1l1077 0032  
                                     i2l1070 190E                                       i1l4176 0022  
                                     i1l4178 0030                                       i2l1067 18FE  
               Interrupt_INTx_Enable@int_obj 0070                                       i2l4172 190C  
                                     i2l4166 18EE                                       i2l4168 18FC  
                                     _SPBRGH 0FB0                                       _SSPADD 0FC8  
                                     _SSPBUF 0FC9                   ?_Interrupt_INTx_Clear_Flag 0070  
                                     clear_0 180A                        led_initialize@pin_obj 0081  
                                     isa$std 0001                __end_of_Interrupt_INTx_Enable 1454  
    gpio_pin_direction_intialize@_pin_config 0070  _I2C_Report_Receive_Overflow_InterruptHandle 0001  
                               __pdataCOMRAM 0043                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8     INT2_SetInterruptHandler@InterruptHandler 0070  
   INT1_SetInterruptHandler@InterruptHandler 0070     INT0_SetInterruptHandler@InterruptHandler 0070  
                                 __accesstop 0080                      __end_of__initialization 1810  
                              ___rparam_used 0001            __end_of_Interrupt_INTx_Clear_Flag 1724  
                          led_initialize@led 007B                            led_initialize@ret 0080  
                    _Interrupt_INTx_Pin_Init 18C4                       ??_gpio_pin_write_logic 0072  
                             __pcstackCOMRAM 006E                   _I2C_DefaultInterruptHandle 0003  
           __end_of_INT2_SetInterruptHandler 1870                  __end_of_Interrupt_INTx_Init 1786  
                      _INT0_InterruptHandler 0031                __end_of_application_intialize 1934  
           __end_of_Interrupt_INTx_Edge_Init 1254                  __end_of_InterruptMangerHigh 1912  
                          led_turn_off@F3068 003E   __end_of_Interrupt_INTx_SetInterruptHandler 15CA  
       ??_Interrupt_INTx_SetInterruptHandler 0074          ?_Interrupt_INTx_SetInterruptHandler 0073  
         _Interrupt_INTx_SetInterruptHandler 1528                   ??_INT1_SetInterruptHandler 0072  
                  _RB6_InterruptHandler_HIGH 0023                         led_turn_toggle@F3073 003D  
                           ??_led_initialize 007C                      ?_Interrupt_INTx_Disable 0070  
                             _tris_registers 0057                     _RB6_InterruptHandler_LOW 0021  
                  ??_Interrupt_INTx_Pin_Init 0078                    ?_INT0_SetInterruptHandler 0070  
                       _ADC_InterruptHandler 0037                                      __Hparam 0000  
                                    __Lparam 0000                          _ecu_layer_intialize 1934  
                          __end_of_btn_value 1011                                 __psmallconst 1000  
                 __end_of_gpio_pin_intialize 17E4                                      __pcinit 17E4  
                                    __ramtop 1000                                      __ptext0 1912  
                                    __ptext1 15CA                                      __ptext2 1786  
                                    __ptext3 1254                                      __ptext4 192E  
                                    __ptext5 1934                                      __ptext6 1724  
                                    __ptext7 1528                                      __ptext8 1846  
                                    __ptext9 1870                                    _T0CONbits 0FD5  
                                  _T1CONbits 0FCD                                    _T2CONbits 0FCA  
                                  _T3CONbits 0FB1                         ?_ecu_layer_intialize 006E  
             __end_of_Interrupt_INTx_Disable 16B2                               __pintcode_body 18EC  
                       end_of_initialization 1810                     _INT2_SetInterruptHandler 1846  
                                    int_func 18EC                  ??_Interrupt_INTx_Clear_Flag 0071  
                      gpio_pin_intialize@ret 007A                                    _RCSTAbits 0FAB  
                                    postdec1 0FE5                                      postdec2 0FDD  
                   _Interrupt_INTx_Edge_Init 1138                                      postinc0 0FEE  
                                    postinc2 0FDE                                   _motor_pin1 0042  
                                 _motor_pin2 0041                        _INT1_InterruptHandler 002F  
              gpio_pin_intialize@_pin_config 0078                  INT2_SetInterruptHandler@ret 0072  
                      ??_ecu_layer_intialize 0070         __end_of_gpio_pin_direction_intialize 1138  
               _gpio_pin_direction_intialize 1012                                    _TRISCbits 0F94  
                Interrupt_INTx_Edge_Init@ret 0073                                  _CCP1CONbits 0FBD  
        Interrupt_INTx_Priority_Init@int_obj 0070                                  _CCP2CONbits 0FBA  
                                  _TXSTAbits 0FAC                           relay_turn_on@F3057 003B  
                     Interrupt_INTx_Init@ret 007A         __end_of_Interrupt_INTx_Priority_Init 1528  
               _Interrupt_INTx_Priority_Init 1454                                  _BAUDCONbits 0FB8  
                              __pidataCOMRAM 181A                               _timer0_preload 0019  
              Interrupt_INTx_Disable@int_obj 0070                    _Interrupt_INTx_Clear_Flag 16B2  
                             _timer1_preload 0015                               _timer2_preload 0039  
                      _Interrupt_INTx_Enable 1364                          start_initialization 17E4  
                             _timer3_preload 000F                ?_gpio_pin_direction_intialize 0070  
                  _EUSART_RxInterruptHandler 000B                   _EUSART_FramingErrorHandler 0009  
              ?_Interrupt_INTx_Priority_Init 0070                                  __pbssCOMRAM 0001  
           __end_of_INT0_SetInterruptHandler 18C4  _I2C_Report_Write_Collision_InterruptHandler 0005  
                              __pcstackBANK0 0080              Interrupt_INTx_Priority_Init@ret 0073  
                      _INT2_InterruptHandler 002D              gpio_pin_direction_intialize@ret 0076  
                      _TMR0_InterruptHandler 001B                        _application_intialize 192E  
                 __end_of_InterruptMangerLow 003E                                    __pintcode 0008  
            gpio_pin_write_logic@_pin_config 0070                                  __pintcodelo 0018  
                  gpio_pin_write_logic@logic 0071                       ?_Interrupt_INTx_Enable 0070  
                                  _btn_value 1001                                  __smallconst 1000  
                  _RB4_InterruptHandler_HIGH 002B                   ??_INT2_SetInterruptHandler 0072  
                  _RB7_InterruptHandler_HIGH 001F                           _gpio_pin_intialize 1786  
            Interrupt_INTx_Edge_Init@int_obj 0070               ??_gpio_pin_direction_intialize 0071  
                 ??_Interrupt_INTx_Edge_Init 0071                     _RB5_InterruptHandler_LOW 0025  
                                   _RB4_Flag 0064                                     _RB5_Flag 0063  
                                   _RB6_Flag 0062                                     _RB7_Flag 0061  
                        ?_gpio_pin_intialize 0078                    ?_INT1_SetInterruptHandler 0070  
                                   _IPR1bits 0F9F                                     _IPR2bits 0FA2  
                                   _PIE1bits 0F9D                                     _PIE2bits 0FA0  
                                   i1u203_20 0030                                     i1u203_21 002C  
                                   i2u201_40 18FC                                     i2u201_41 18F8  
                                   i2u202_40 190C                                     i2u202_41 1908  
                                   _PIR1bits 0F9E                                     _PIR2bits 0FA1  
             Interrupt_INTx_Pin_Init@int_obj 0077                                     _RCONbits 0FD0  
                                 _ADCON0bits 0FC2                                   _ADCON1bits 0FC1  
                                 _ADCON2bits 0FC0                         ??_gpio_pin_intialize 0079  
             ??_Interrupt_INTx_Priority_Init 0071                                     _Int0_ISR 0000  
                    gpio_pin_write_logic@ret 0077                                  _INTCON2bits 0FF1  
                                _INTCON3bits 0FF0                                    copy_data0 17F8  
                   ?_Interrupt_INTx_Pin_Init 0077                     _INT0_SetInterruptHandler 189A  
                                 _EECON1bits 0FA6                       ?_application_intialize 006E  
                                   __Hrparam 0000                                     __Lrparam 0000  
                INT0_SetInterruptHandler@ret 0072                        _CCP1_InterruptHandler 0035  
                __end_of_ecu_layer_intialize 1936                    Interrupt_INTx_Disable@ret 0073  
                 Interrupt_INTx_Init@int_obj 0079                        _TMR1_InterruptHandler 0017  
                                   __ptext10 189A                                     __ptext11 1454  
                                   __ptext12 18C4                                     __ptext13 1012  
                                   __ptext14 1364                                     __ptext15 1138  
                                   __ptext16 1640                                     __ptext17 16B2  
                                   _int0_obj 0067             Interrupt_INTx_Clear_Flag@int_obj 0070  
                                   isa$xinst 0000                                     int$flags 007D  
                   ??_Interrupt_INTx_Disable 0071                          _Interrupt_INTx_Init 1724  
                                 _INTCONbits 0FF2              __end_of_Interrupt_INTx_Pin_Init 18EC  
               __end_of_gpio_pin_write_logic 1364                                     intlevel1 0000  
                                   intlevel2 0000                    _EUSART_TxInterruptHandler 000D  
               Interrupt_INTx_Clear_Flag@ret 0073                          _InterruptMangerHigh 0008  
                       ?_Interrupt_INTx_Init 0079        Interrupt_INTx_SetInterruptHandler@ret 0076  
                 Interrupt_INTx_Pin_Init@ret 0078                      ??_Interrupt_INTx_Enable 0071  
                       ?_InterruptMangerHigh 006E                               _port_registers 0043  
                         _InterruptMangerLow 0018             __end_of_INT1_SetInterruptHandler 189A  
                                _SSPCON1bits 0FC6                                  _SSPCON2bits 0FC5  
                        ?_InterruptMangerLow 006E                        _CCP2_InterruptHandler 0033  
                      ??_Interrupt_INTx_Init 007A                        _TMR2_InterruptHandler 0013  
                             _led_initialize 15CA  
